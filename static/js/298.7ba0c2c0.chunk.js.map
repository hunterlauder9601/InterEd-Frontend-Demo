{"version":3,"file":"static/js/298.7ba0c2c0.chunk.js","mappings":"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","sources":["../node_modules/react-particles/esm/Utils.js","../node_modules/react-particles/esm/Particles.js","../node_modules/react-particles/esm/index.js","../node_modules/tsparticles-engine/esm/Core/Utils/Circle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Constants.js","../node_modules/tsparticles-engine/esm/Core/Utils/Range.js","../node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js","../node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Random.js","../node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js","../node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js","../node_modules/tsparticles-engine/esm/Utils/ColorUtils.js","../node_modules/tsparticles-engine/esm/Utils/NumberUtils.js","../node_modules/tsparticles-engine/esm/Utils/Utils.js","../node_modules/tsparticles-engine/esm/Core/Canvas.js","../node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js","../node_modules/tsparticles-engine/esm/Options/Classes/Background/Background.js","../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js","../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js","../node_modules/tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ResizeEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js","../node_modules/tsparticles-engine/esm/Options/Classes/ManualParticle.js","../node_modules/tsparticles-engine/esm/Options/Classes/Responsive.js","../node_modules/tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js","../node_modules/tsparticles-engine/esm/Options/Classes/Theme/Theme.js","../node_modules/tsparticles-engine/esm/Options/Classes/ColorAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/HslAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrailFill.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js","../node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shadow.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Stroke.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js","../node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js","../node_modules/tsparticles-engine/esm/Options/Classes/Options.js","../node_modules/tsparticles-engine/esm/Core/Utils/InteractionManager.js","../node_modules/tsparticles-engine/esm/Core/Particle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Point.js","../node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js","../node_modules/tsparticles-engine/esm/Core/Particles.js","../node_modules/tsparticles-engine/esm/Core/Retina.js","../node_modules/tsparticles-engine/esm/Core/Container.js","../node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js","../node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js","../node_modules/tsparticles-engine/esm/Core/Engine.js","../node_modules/tsparticles-engine/esm/Utils/HslColorManager.js","../node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js","../node_modules/tsparticles-engine/esm/index.js","../node_modules/tsparticles-engine/esm/init.js","../node_modules/tsparticles-particles.js/esm/marcbruederlin/Particles.js","../node_modules/tsparticles-particles.js/esm/index.js","../node_modules/tsparticles-particles.js/esm/VincentGarreau/particles.js","../node_modules/tsparticles-move-base/esm/Utils.js","../node_modules/tsparticles-move-base/esm/BaseMover.js","../node_modules/tsparticles-move-base/esm/index.js","../node_modules/tsparticles-shape-circle/esm/CircleDrawer.js","../node_modules/tsparticles-shape-circle/esm/index.js","../node_modules/tsparticles-updater-color/esm/Utils.js","../node_modules/tsparticles-updater-color/esm/ColorUpdater.js","../node_modules/tsparticles-updater-color/esm/index.js","../node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js","../node_modules/tsparticles-updater-opacity/esm/Utils.js","../node_modules/tsparticles-updater-opacity/esm/index.js","../node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/Utils.js","../node_modules/tsparticles-updater-out-modes/esm/DestroyOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/NoneOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/OutOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/OutOfCanvasUpdater.js","../node_modules/tsparticles-updater-out-modes/esm/index.js","../node_modules/tsparticles-updater-size/esm/SizeUpdater.js","../node_modules/tsparticles-updater-size/esm/Utils.js","../node_modules/tsparticles-updater-size/esm/index.js","../node_modules/tsparticles-basic/esm/index.js","../node_modules/tsparticles-plugin-easing-quad/esm/index.js","../node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js","../node_modules/tsparticles-interaction-external-attract/esm/Options/Classes/Attract.js","../node_modules/tsparticles-interaction-external-attract/esm/Attractor.js","../node_modules/tsparticles-interaction-external-attract/esm/index.js","../node_modules/tsparticles-interaction-external-bounce/esm/Options/Classes/Bounce.js","../node_modules/tsparticles-interaction-external-bounce/esm/Bouncer.js","../node_modules/tsparticles-interaction-external-bounce/esm/index.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleBase.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleDiv.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/Bubble.js","../node_modules/tsparticles-interaction-external-bubble/esm/Utils.js","../node_modules/tsparticles-interaction-external-bubble/esm/Bubbler.js","../node_modules/tsparticles-interaction-external-bubble/esm/index.js","../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/ConnectLinks.js","../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/Connect.js","../node_modules/tsparticles-interaction-external-connect/esm/Utils.js","../node_modules/tsparticles-interaction-external-connect/esm/Connector.js","../node_modules/tsparticles-interaction-external-connect/esm/index.js","../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/GrabLinks.js","../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/Grab.js","../node_modules/tsparticles-interaction-external-grab/esm/Utils.js","../node_modules/tsparticles-interaction-external-grab/esm/Grabber.js","../node_modules/tsparticles-interaction-external-grab/esm/index.js","../node_modules/tsparticles-interaction-external-pause/esm/Pauser.js","../node_modules/tsparticles-interaction-external-pause/esm/index.js","../node_modules/tsparticles-interaction-external-push/esm/Options/Classes/Push.js","../node_modules/tsparticles-interaction-external-push/esm/Pusher.js","../node_modules/tsparticles-interaction-external-push/esm/index.js","../node_modules/tsparticles-interaction-external-remove/esm/Options/Classes/Remove.js","../node_modules/tsparticles-interaction-external-remove/esm/Remover.js","../node_modules/tsparticles-interaction-external-remove/esm/index.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseBase.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseDiv.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/Repulse.js","../node_modules/tsparticles-interaction-external-repulse/esm/Repulser.js","../node_modules/tsparticles-interaction-external-repulse/esm/index.js","../node_modules/tsparticles-interaction-external-slow/esm/Options/Classes/Slow.js","../node_modules/tsparticles-interaction-external-slow/esm/Slower.js","../node_modules/tsparticles-interaction-external-slow/esm/index.js","../node_modules/tsparticles-shape-image/esm/GifUtils/Constants.js","../node_modules/tsparticles-shape-image/esm/GifUtils/ByteStream.js","../node_modules/tsparticles-shape-image/esm/GifUtils/Utils.js","../node_modules/tsparticles-shape-image/esm/Utils.js","../node_modules/tsparticles-shape-image/esm/ImageDrawer.js","../node_modules/tsparticles-shape-image/esm/Options/Classes/Preload.js","../node_modules/tsparticles-shape-image/esm/ImagePreloader.js","../node_modules/tsparticles-shape-image/esm/index.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDelay.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDuration.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/Life.js","../node_modules/tsparticles-updater-life/esm/LifeUpdater.js","../node_modules/tsparticles-updater-life/esm/index.js","../node_modules/tsparticles-shape-line/esm/LineDrawer.js","../node_modules/tsparticles-shape-line/esm/index.js","../node_modules/tsparticles-move-parallax/esm/ParallaxMover.js","../node_modules/tsparticles-move-parallax/esm/index.js","../node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js","../node_modules/tsparticles-interaction-particles-attract/esm/Attractor.js","../node_modules/tsparticles-interaction-particles-attract/esm/index.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Bounce.js","../node_modules/tsparticles-interaction-particles-collisions/esm/ResolveCollision.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Destroy.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js","../node_modules/tsparticles-interaction-particles-collisions/esm/index.js","../node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksShadow.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksTriangle.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/Links.js","../node_modules/tsparticles-interaction-particles-links/esm/Linker.js","../node_modules/tsparticles-interaction-particles-links/esm/interaction.js","../node_modules/tsparticles-interaction-particles-links/esm/Utils.js","../node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js","../node_modules/tsparticles-interaction-particles-links/esm/plugin.js","../node_modules/tsparticles-interaction-particles-links/esm/index.js","../node_modules/tsparticles-shape-polygon/esm/PolygonDrawerBase.js","../node_modules/tsparticles-shape-polygon/esm/PolygonDrawer.js","../node_modules/tsparticles-shape-polygon/esm/TriangleDrawer.js","../node_modules/tsparticles-shape-polygon/esm/index.js","../node_modules/tsparticles-updater-rotate/esm/Options/Classes/RotateAnimation.js","../node_modules/tsparticles-updater-rotate/esm/Options/Classes/Rotate.js","../node_modules/tsparticles-updater-rotate/esm/RotateUpdater.js","../node_modules/tsparticles-updater-rotate/esm/index.js","../node_modules/tsparticles-shape-square/esm/SquareDrawer.js","../node_modules/tsparticles-shape-square/esm/index.js","../node_modules/tsparticles-shape-star/esm/StarDrawer.js","../node_modules/tsparticles-shape-star/esm/index.js","../node_modules/tsparticles-updater-stroke-color/esm/Utils.js","../node_modules/tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js","../node_modules/tsparticles-updater-stroke-color/esm/index.js","../node_modules/tsparticles-shape-text/esm/TextDrawer.js","../node_modules/tsparticles-shape-text/esm/index.js","../node_modules/tsparticles-slim/esm/index.js"],"sourcesContent":["const isObject = (val) => typeof val === \"object\" && val !== null;\nexport function deepCompare(obj1, obj2, excludeKeyFn = () => false) {\n    if (!isObject(obj1) || !isObject(obj2)) {\n        return obj1 === obj2;\n    }\n    const keys1 = Object.keys(obj1).filter(key => !excludeKeyFn(key)), keys2 = Object.keys(obj2).filter(key => !excludeKeyFn(key));\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const value1 = obj1[key], value2 = obj2[key];\n        if (isObject(value1) && isObject(value2)) {\n            if (value1 === obj2 && value2 === obj1) {\n                continue;\n            }\n            if (!deepCompare(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (Array.isArray(value1) && Array.isArray(value2)) {\n            if (!deepCompareArrays(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (value1 !== value2) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction deepCompareArrays(arr1, arr2, excludeKeyFn) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        const val1 = arr1[i], val2 = arr2[i];\n        if (Array.isArray(val1) && Array.isArray(val2)) {\n            if (!deepCompareArrays(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (isObject(val1) && isObject(val2)) {\n            if (!deepCompare(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (val1 !== val2) {\n            return false;\n        }\n    }\n    return true;\n}\n","import React, { Component } from \"react\";\nimport { tsParticles } from \"tsparticles-engine\";\nimport { deepCompare } from \"./Utils\";\nconst defaultId = \"tsparticles\";\nclass Particles extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            init: false,\n            library: undefined,\n        };\n    }\n    destroy() {\n        if (!this.state.library) {\n            return;\n        }\n        this.state.library.destroy();\n        this.setState({\n            library: undefined,\n        });\n    }\n    shouldComponentUpdate(nextProps) {\n        const nextOptions = nextProps.options ?? nextProps.params, currentOptions = this.props.options ?? this.props.params;\n        return (nextProps.url !== this.props.url ||\n            nextProps.id !== this.props.id ||\n            nextProps.canvasClassName !== this.props.canvasClassName ||\n            nextProps.className !== this.props.className ||\n            nextProps.height !== this.props.height ||\n            nextProps.width !== this.props.width ||\n            !deepCompare(nextProps.style, this.props.style) ||\n            nextProps.init !== this.props.init ||\n            nextProps.loaded !== this.props.loaded ||\n            !deepCompare(nextOptions, currentOptions, key => key.startsWith(\"_\")));\n    }\n    componentDidUpdate() {\n        this.refresh();\n    }\n    forceUpdate() {\n        this.refresh().then(() => {\n            super.forceUpdate();\n        });\n    }\n    componentDidMount() {\n        (async () => {\n            if (this.props.init) {\n                await this.props.init(tsParticles);\n            }\n            this.setState({\n                init: true,\n            }, async () => {\n                await this.loadParticles();\n            });\n        })();\n    }\n    componentWillUnmount() {\n        this.destroy();\n    }\n    render() {\n        const { width, height, className, canvasClassName, id } = this.props;\n        return (React.createElement(\"div\", { className: className, id: id },\n            React.createElement(\"canvas\", { className: canvasClassName, style: {\n                    ...this.props.style,\n                    width,\n                    height,\n                } })));\n    }\n    async refresh() {\n        this.destroy();\n        await this.loadParticles();\n    }\n    async loadParticles() {\n        if (!this.state.init) {\n            return;\n        }\n        const id = this.props.id ?? Particles.defaultProps.id ?? defaultId, container = await tsParticles.load({\n            url: this.props.url,\n            id,\n            options: this.props.options ?? this.props.params,\n        });\n        if (this.props.container) {\n            this.props.container.current = container;\n        }\n        this.setState({\n            library: container,\n        });\n        if (this.props.loaded) {\n            await this.props.loaded(container);\n        }\n    }\n}\nParticles.defaultProps = {\n    width: \"100%\",\n    height: \"100%\",\n    options: {},\n    style: {},\n    url: undefined,\n    id: defaultId,\n};\nexport default Particles;\n","import Particles from \"./Particles\";\nexport default Particles;\nexport { Particles };\n","import { Range } from \"./Range\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle) {\n            const rSum = r + range.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle) {\n            const { width, height } = range.size, edges = Math.pow(distPos.x - width, 2) + Math.pow(distPos.y - height, 2);\n            return (edges <= r ** 2 ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\n","export const generatedAttribute = \"generated\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchEndEvent = \"touchend\";\nexport const touchMoveEvent = \"touchmove\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\nexport const errorPrefix = \"tsParticles - Error\";\n","export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, 0);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { errorPrefix } from \"./Constants\";\nimport { isNumber } from \"../../Utils/Utils\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? 0;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != 0) {\n            this.multTo(1.0 / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (data?.value === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n","export class Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions\";\nimport { Random } from \"./Random\";\nimport { isBoolean } from \"../../Utils/Utils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ValueWithRandom {\n    constructor() {\n        this.random = new Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (isBoolean(data.random)) {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, 0, 0, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * (transform.a ?? 1),\n        b: rotateData.sin * (transform.b ?? 1),\n        c: -rotateData.sin * (transform.c ?? 1),\n        d: rotateData.cos * (transform.d ?? 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? 0;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (strokeWidth > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer || !drawer.afterEffect) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n","import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { isArray, isString, itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    if (res.h >= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    return stringToRgba(input)?.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (!hslPercent.s) {\n        result.r = result.g = result.b = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l < 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = \"increasing\";\n        colorValue.loops = 0;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = 0;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * 1000;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n","import { isBoolean, isNumber } from \"./Utils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n    if (easings.get(name)) {\n        return;\n    }\n    easings.set(name, easing);\n}\nexport function getEasing(name) {\n    return easings.get(name) || ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = isBoolean(random)\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** 2 + dy ** 2) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return (direction * Math.PI) / 180;\n    }\n    switch (direction) {\n        case \"top\":\n            return -Math.PI / 2;\n        case \"top-right\":\n            return -Math.PI / 4;\n        case \"right\":\n            return 0;\n        case \"bottom-right\":\n            return Math.PI / 4;\n        case \"bottom\":\n            return Math.PI / 2;\n        case \"bottom-left\":\n            return (3 * Math.PI) / 4;\n        case \"left\":\n            return Math.PI;\n        case \"top-left\":\n            return (-3 * Math.PI) / 4;\n        case \"inside\":\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case \"outside\":\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * Math.PI * 2;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position && data.position.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * 100) * data.size.width) / 100,\n        y: ((data.position?.y ?? getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\n}\n","import { collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, (selector) => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some((t) => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    return value === array || (isArray(array) && array.indexOf(value) > -1);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius ?? 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === \"left\")) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === \"right\")) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === \"top\")) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map((v) => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, (t) => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, (div) => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, (selector) => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, (div) => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getValue(particle.options.bounce.horizontal),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getValue(particle.options.bounce.vertical),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, 0);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.find((t, index) => callback(t, index)) : callback(obj, 0) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * 1000,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    };\n    if (animationOptions.enable) {\n        res.decay = 1 - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case \"increase\":\n                res.status = \"increasing\";\n                break;\n            case \"decrease\":\n                res.status = \"decreasing\";\n                break;\n            case \"random\":\n                res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                break;\n        }\n        const autoStatus = animationOptions.mode === \"auto\";\n        switch (animationOptions.startValue) {\n            case \"min\":\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = \"increasing\";\n                }\n                break;\n            case \"max\":\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = \"decreasing\";\n                }\n                break;\n            case \"random\":\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === \"percent\";\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / 100) * canvasSize.width,\n            y: (positionOrSize.y / 100) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / 100) * canvasSize.width,\n            height: (positionOrSize.height / 100) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nexport function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw && updater.afterDraw(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw && updater.beforeDraw(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize && plugin.resize();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n            if (coverRgb) {\n                const coverColor = {\n                    ...coverRgb,\n                    a: cover.opacity,\n                };\n                this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                const trail = options.particles.move.trail;\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity: 1 / trail.length,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity: 1 / trail.length,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            const style = element.style;\n            style.position = originalStyle.position;\n            style.zIndex = originalStyle.zIndex;\n            style.top = originalStyle.top;\n            style.left = originalStyle.left;\n            style.width = originalStyle.width;\n            style.height = originalStyle.height;\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const priority = \"important\", style = element.style;\n            style.setProperty(\"position\", \"fixed\", priority);\n            style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n            style.setProperty(\"top\", \"0\", priority);\n            style.setProperty(\"left\", \"0\", priority);\n            style.setProperty(\"width\", \"100%\", priority);\n            style.setProperty(\"height\", \"100%\", priority);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element && element.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? 1, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), 500);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n            if (theme && theme.default.auto) {\n                container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document && document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.getAnimationStatus()) {\n                    container.play(true);\n                }\n                else {\n                    container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = async () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            this._resizeTimeout = setTimeout(async () => {\n                const canvas = this.container.canvas;\n                canvas && (await canvas.windowResize());\n            }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver(async (entries) => {\n                    const entry = entries.find((e) => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    await this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity || !interactivity.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? 0),\n                        y: lastTouch.clientY - (canvasRect.top ?? 0),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nimport { isString } from \"../../../Utils/Utils\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = \"circle\";\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const ids = data.ids ?? data.elementId ?? data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","export class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean } from \"../../../../Utils/Utils\";\nimport { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { ResizeEvent } from \"./ResizeEvent\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.onClick.load(data.onClick ?? data.onclick);\n        const onDiv = data.onDiv ?? data.ondiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover ?? data.onhover);\n        if (isBoolean(data.resize)) {\n            this.resize.enable = data.resize;\n        }\n        else {\n            this.resize.load(data.resize);\n        }\n    }\n}\n","export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const detectsOn = data.detectsOn ?? data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class ManualParticle {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? 50,\n                y: data.position.y ?? 50,\n                mode: data.position.mode ?? \"percent\",\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = \"canvas\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === \"screen\") {\n                this.mode = \"screen\";\n            }\n            else {\n                this.mode = \"canvas\";\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = \"any\";\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils/Utils\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.delay = 0;\n        this.decay = 0;\n        this.sync = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nimport { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionsAbsorb } from \"./CollisionsAbsorb\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = \"bounce\";\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = data.rotate?.x ?? data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = data.rotate?.y ?? data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\n","export class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = \"percent\";\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom\";\nimport { deepExtend } from \"../../../../../Utils/Utils\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor\";\nexport class MoveTrailFill {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    get fillColor() {\n        return this.fill.color;\n    }\n    set fillColor(value) {\n        this.fill.load({ color: value });\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined || data.fillColor !== undefined) {\n            this.fill.load(data.fill || { color: data.fillColor });\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","export class OutModes {\n    constructor() {\n        this.default = \"out\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { isNumber, isObject } from \"../../../../Utils/Utils\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes ?? data.outMode ?? data.out_mode;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path ?? data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = \"auto\";\n        this.startValue = \"random\";\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 2;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.opacity_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.opacity_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Opacity extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    get area() {\n        return this.width;\n    }\n    set area(value) {\n        this.width = value;\n    }\n    get factor() {\n        return this.height;\n    }\n    set factor(value) {\n        this.height = value;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width ?? data.area ?? data.value_area;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height ?? data.factor;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = 0;\n        this.value = 0;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = data.limit ?? data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend, isArray } from \"../../../../Utils/Utils\";\nconst charKey = \"character\", charAltKey = \"char\", imageKey = \"image\", imageAltKey = \"images\", polygonKey = \"polygon\", polygonAltKey = \"star\";\nexport class Shape {\n    constructor() {\n        this.loadShape = (item, mainKey, altKey, altOverride) => {\n            if (!item) {\n                return;\n            }\n            const itemIsArray = isArray(item), emptyValue = itemIsArray ? [] : {}, mainDifferentValues = itemIsArray !== isArray(this.options[mainKey]), altDifferentValues = itemIsArray !== isArray(this.options[altKey]);\n            if (mainDifferentValues) {\n                this.options[mainKey] = emptyValue;\n            }\n            if (altDifferentValues && altOverride) {\n                this.options[altKey] = emptyValue;\n            }\n            this.options[mainKey] = deepExtend(this.options[mainKey] ?? emptyValue, item);\n            if (!this.options[altKey] || altOverride) {\n                this.options[altKey] = deepExtend(this.options[altKey] ?? emptyValue, item);\n            }\n        };\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        return (this.options[charKey] ?? this.options[charAltKey]);\n    }\n    set character(value) {\n        this.options[charAltKey] = this.options[charKey] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        return (this.options[imageKey] ?? this.options[imageAltKey]);\n    }\n    set image(value) {\n        this.options[imageAltKey] = this.options[imageKey] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        return (this.options[polygonKey] ?? this.options[polygonAltKey]);\n    }\n    set polygon(value) {\n        this.options[polygonAltKey] = this.options[polygonKey] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const options = data.options ?? data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, charKey, charAltKey, true);\n        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n        this.loadShape(data.image ?? data.images, imageKey, imageAltKey, true);\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 5;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.size_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.size_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Size extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        if (data.groups !== undefined) {\n            for (const group in data.groups) {\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        const collisions = data.move?.collisions ?? data.move?.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke ?? data.shape?.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, (t) => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.plugins.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = (mode) => {\n            return (this.themes.find((theme) => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find((theme) => theme.default.value && theme.default.mode === \"any\"));\n        };\n        this._importPreset = (preset) => {\n            this.load(this._engine.plugins.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, (preset) => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina ?? data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit ?? data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen ?? data.backgroundMode;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.plugins.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find((t) => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(\"dark\")?.name;\n        this.defaultThemes.light = this._findDefaultTheme(\"light\")?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find((t) => t.mode === \"screen\" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = engine.plugins.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && (await interactor.interact(delta));\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode && interactor.handleClickMode(mode);\n        }\n    }\n    init() {\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && (await interactor.interact(particle, delta));\n        }\n    }\n    async reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && interactor.reset(particle);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && interactor.reset(particle);\n        }\n    }\n}\n","import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * 2;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = 0) => {\n            for (const [, plugin] of container.plugins) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-horizontal\"],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-vertical\"],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n                return res;\n            }\n            const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\n                left: radOffset - rad / 2,\n                right: radOffset + rad / 2,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = 0) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries >= 0 && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find((particle) => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = (color) => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor(((this.roll.angle ?? 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = (position) => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? 0,\n                mode: this.options.move.center.mode ?? \"percent\",\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case \"inside\":\n                    this.outType = \"inside\";\n                    break;\n                case \"outside\":\n                    this.outType = \"outside\";\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._loadShapeData = (shapeOptions, reduceDuplicates) => {\n            const shapeData = shapeOptions.options[this.shape];\n            if (!shapeData) {\n                return;\n            }\n            return deepExtend({\n                close: shapeOptions.close,\n                fill: shapeOptions.fill,\n            }, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        };\n        this._engine = engine;\n        this.init(id, position, overrideOptions, group);\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n        if (pathGenerator) {\n            pathGenerator.reset(this);\n        }\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.fill = true;\n        this.pathRotation = false;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const shapeOptions = particlesOptions.shape;\n        if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {\n            const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            if (shape) {\n                this.shape = shape;\n                shapeOptions.load(overrideOptions.shape);\n            }\n        }\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.fill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.close = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer && drawer.loadShape) {\n            drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of container.particles.movers) {\n            mover.init && mover.init(this);\n        }\n        if (drawer && drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.particleCreated && plugin.particleCreated(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset && updater.reset(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < 4; i++) {\n                this._subs.push(new QuadTree(new Rectangle(x + (width / 2) * (i % 2), y + (height / 2) * (Math.round(i / 2) - (i % 2)), width / 2, height / 2), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) => sub.insert(point));\n    }\n    query(range, check, found) {\n        const res = found || [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                sub.query(range, check, res);\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { errorPrefix } from \"./Utils/Constants\";\nconst qTreeCapacity = 4;\nconst qTreeRectangle = (canvasSize) => {\n    return new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._applyDensity = (options, manualCount, group) => {\n            if (!options.number.density?.enable) {\n                return;\n            }\n            const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\n            this.limit = numberOptions.limit * densityFactor;\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) => {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return 1;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this.pool.pop();\n                if (particle) {\n                    particle.init(this._nextId, position, overrideOptions, group);\n                }\n                else {\n                    particle = new Particle(this._engine, this._nextId, this._container, position, overrideOptions, group);\n                }\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n                return;\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            particle.destroy(override);\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, 1);\n            this._zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this._container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this._container;\n        container.canvas.clear();\n        await this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    init() {\n        const container = this._container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this._interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            this._removeParticle(i--, group, override) && deleted++;\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups;\n        for (const group in groups) {\n            this._applyDensity(groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.update && plugin.update(delta);\n        }\n        for (const particle of this._array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                if (plugin.particleUpdate) {\n                    plugin.particleUpdate(particle, delta);\n                }\n            }\n            for (const mover of this.movers) {\n                mover.isEnabled(particle) && mover.move(particle, delta);\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            this.pool.push(...particlesToDelete);\n        }\n        await this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n        if (this.needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = zArray[zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = 1;\n        this.reduceFactor = 1;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { getLogger, isFunction } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => p.velocity,\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                (entry.isIntersecting ? this.play : this.pause)();\n            }\n        };\n        this._nextFrame = async (timestamp) => {\n            try {\n                if (!this.smooth &&\n                    this.lastFrameTime !== undefined &&\n                    timestamp < this.lastFrameTime + 1000 / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this.lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this.lastFrameTime, this.fpsLimit, this.smooth);\n                this.addLifeTime(delta.value);\n                this.lastFrameTime = timestamp;\n                if (delta.value > 1000) {\n                    this.draw(false);\n                    return;\n                }\n                await this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.getAnimationStatus()) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator ?? defaultPathGenerator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            drawer.destroy && drawer.destroy(this);\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = requestAnimationFrame(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this._nextFrame(timestamp);\n        });\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode && plugin.handleClickMode(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this._lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            drawer.init && (await drawer.init(this));\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.init && (await plugin.init());\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup && plugin.particlesSetup();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause && plugin.pause();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = { ...defaultPathGenerator };\n        if (isFunction(pathOrGenerator)) {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    plugin.start && (await plugin.start());\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop && plugin.stop();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners && listeners.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        !this.getPathGenerator(type) && this.pathGenerators.set(type, pathGenerator);\n    }\n    addPlugin(plugin) {\n        !this.getPlugin(plugin.id) && this.plugins.push(plugin);\n    }\n    addPreset(presetKey, options, override = false) {\n        (override || !this.getPreset(presetKey)) && this.presets.set(presetKey, options);\n    }\n    addShapeDrawer(types, drawer) {\n        executeOnSingleOrMultiple(types, (type) => {\n            !this.getShapeDrawer(type) && this.drawers.set(type, drawer);\n        });\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            plugin.needsPlugin(container.actualOptions) && res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            updater.loadOptions && updater.loadOptions(options, ...sourceOptions);\n        }\n    }\n}\n","import { errorPrefix, generatedAttribute } from \"./Utils/Constants\";\nimport { getLogger, isBoolean, isFunction, isNumber, isString, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { Container } from \"./Container\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher\";\nimport { Plugins } from \"./Utils/Plugins\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nfunction isParamsEmpty(params) {\n    return !params.id && !params.element && !params.url && !params.options;\n}\nfunction isParams(obj) {\n    return !isParamsEmpty(obj);\n}\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = new Plugins(this);\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get version() {\n        return \"2.12.0\";\n    }\n    addConfig(nameOrConfig, config) {\n        if (isString(nameOrConfig)) {\n            if (config) {\n                config.name = nameOrConfig;\n                this._configs.set(nameOrConfig, config);\n            }\n        }\n        else {\n            this._configs.set(nameOrConfig.name ?? \"default\", nameOrConfig);\n        }\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh(refresh);\n    }\n    async addShape(shape, drawer, initOrRefresh, afterEffectOrRefresh, destroyOrRefresh, refresh = true) {\n        let customDrawer;\n        let realRefresh = refresh, realInit, realAfterEffect, realDestroy;\n        if (isBoolean(initOrRefresh)) {\n            realRefresh = initOrRefresh;\n            realInit = undefined;\n        }\n        else {\n            realInit = initOrRefresh;\n        }\n        if (isBoolean(afterEffectOrRefresh)) {\n            realRefresh = afterEffectOrRefresh;\n            realAfterEffect = undefined;\n        }\n        else {\n            realAfterEffect = afterEffectOrRefresh;\n        }\n        if (isBoolean(destroyOrRefresh)) {\n            realRefresh = destroyOrRefresh;\n            realDestroy = undefined;\n        }\n        else {\n            realDestroy = destroyOrRefresh;\n        }\n        if (isFunction(drawer)) {\n            customDrawer = {\n                afterEffect: realAfterEffect,\n                destroy: realDestroy,\n                draw: drawer,\n                init: realInit,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh(realRefresh);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (!item || item.destroyed) {\n            dom.splice(index, 1);\n            return;\n        }\n        return item;\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    async load(tagIdOrOptionsOrParams, options) {\n        return this.loadFromArray(tagIdOrOptionsOrParams, options);\n    }\n    async loadFromArray(tagIdOrOptionsOrParams, optionsOrIndex, index) {\n        let params;\n        if (!isParams(tagIdOrOptionsOrParams)) {\n            params = {};\n            if (isString(tagIdOrOptionsOrParams)) {\n                params.id = tagIdOrOptionsOrParams;\n            }\n            else {\n                params.options = tagIdOrOptionsOrParams;\n            }\n            if (isNumber(optionsOrIndex)) {\n                params.index = optionsOrIndex;\n            }\n            else {\n                params.options = optionsOrIndex ?? params.options;\n            }\n            params.index = index ?? params.index;\n        }\n        else {\n            params = tagIdOrOptionsOrParams;\n        }\n        return this._loadParams(params);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        let url, id;\n        if (isNumber(pathConfigJson) || pathConfigJson === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = pathConfigJson;\n        }\n        return this._loadParams({ id: id, url, index });\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        this.dom().forEach((t) => t.refresh());\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options, index) {\n        const params = { index };\n        if (isString(id)) {\n            params.id = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (element instanceof HTMLElement) {\n            params.element = element;\n        }\n        else {\n            params.options = element;\n        }\n        if (isNumber(options)) {\n            params.index = options;\n        }\n        else {\n            params.options = options ?? params.options;\n        }\n        return this._loadParams(params);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        const params = {};\n        if (id instanceof HTMLElement) {\n            params.element = id;\n            params.url = element;\n            params.index = pathConfigJson;\n        }\n        else {\n            params.id = id;\n            params.element = element;\n            params.url = pathConfigJson;\n            params.index = index;\n        }\n        return this._loadParams(params);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n    async _loadParams(params) {\n        const id = params.id ?? `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        let domContainer = params.element ?? document.getElementById(id);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = id;\n            document.body.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this.dom(), oldIndex = dom.findIndex((v) => v.id === id);\n        if (oldIndex >= 0) {\n            const old = this.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n","import { init } from \"./init\";\nimport { isSsr } from \"./Utils/Utils\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports\";\nexport * from \"./export-types\";\nexport { tsParticles };\n","import { Engine } from \"./Core/Engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nexport function init() {\n    const rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\n    addColorManager(rgbColorManager);\n    addColorManager(hslColorManager);\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n","import { tsParticles } from \"tsparticles-engine\";\nexport class Particles {\n    static init(options) {\n        const particles = new Particles(), selector = options.selector;\n        if (!selector) {\n            throw new Error(\"No selector provided\");\n        }\n        const el = document.querySelector(selector);\n        if (!el) {\n            throw new Error(\"No element found for selector\");\n        }\n        tsParticles\n            .set(selector.replace(\".\", \"\").replace(\"!\", \"\"), el, {\n            fullScreen: {\n                enable: false,\n            },\n            particles: {\n                color: {\n                    value: options.color ?? \"!000000\",\n                },\n                links: {\n                    color: \"random\",\n                    distance: options.minDistance ?? 120,\n                    enable: options.connectParticles ?? false,\n                },\n                move: {\n                    enable: true,\n                    speed: options.speed ?? 0.5,\n                },\n                number: {\n                    value: options.maxParticles ?? 100,\n                },\n                size: {\n                    value: { min: 1, max: options.sizeVariations ?? 3 },\n                },\n            },\n            responsive: options.responsive?.map((responsive) => ({\n                maxWidth: responsive.breakpoint,\n                options: {\n                    particles: {\n                        color: {\n                            value: responsive.options?.color,\n                        },\n                        links: {\n                            distance: responsive.options?.minDistance,\n                            enable: responsive.options?.connectParticles,\n                        },\n                        number: {\n                            value: options.maxParticles,\n                        },\n                        move: {\n                            enable: true,\n                            speed: responsive.options?.speed,\n                        },\n                        size: {\n                            value: responsive.options?.sizeVariations,\n                        },\n                    },\n                },\n            })),\n        })\n            .then((container) => {\n            particles._container = container;\n        });\n        return particles;\n    }\n    destroy() {\n        const container = this._container;\n        container && container.destroy();\n    }\n    pauseAnimation() {\n        const container = this._container;\n        container && container.pause();\n    }\n    resumeAnimation() {\n        const container = this._container;\n        container && container.play();\n    }\n}\n","import { Particles } from \"./marcbruederlin/Particles\";\nimport { initParticlesJS } from \"./VincentGarreau/particles\";\nconst initPjs = (engine) => {\n    const { particlesJS, pJSDom } = initParticlesJS(engine);\n    window.particlesJS = particlesJS;\n    window.pJSDom = pJSDom;\n    window.Particles = Particles;\n    return { particlesJS, pJSDom, Particles };\n};\nexport { initPjs };\n","const initParticlesJS = (engine) => {\n    const particlesJS = (tagId, options) => {\n        return engine.load(tagId, options);\n    };\n    particlesJS.load = (tagId, pathConfigJson, callback) => {\n        engine\n            .loadJSON(tagId, pathConfigJson)\n            .then((container) => {\n            if (container) {\n                callback(container);\n            }\n        })\n            .catch(() => {\n            callback(undefined);\n        });\n    };\n    particlesJS.setOnClickHandler = (callback) => {\n        engine.setOnClickHandler(callback);\n    };\n    const pJSDom = engine.dom();\n    return { particlesJS, pJSDom };\n};\nexport { initParticlesJS };\n","import { clamp, getDistances, getRandom, } from \"tsparticles-engine\";\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    if (((hDistance && dxFixed >= hDistance) || (vDistance && dyFixed >= vDistance)) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance && ((pos.x < initialPosition.x && vel.x < 0) || (pos.x > initialPosition.x && vel.x > 0))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance && ((pos.y < initialPosition.y && vel.y < 0) || (pos.y > initialPosition.y && vel.y > 0))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n    applyPath(particle, delta);\n    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -1 : 1;\n    if (moveDrift && moveSpeed) {\n        particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n    }\n    if (gravityOptions?.enable && moveSpeed) {\n        particle.velocity.y += (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n    }\n    const decay = particle.moveDecay;\n    particle.velocity.multTo(decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    if (gravityOptions?.enable &&\n        maxSpeed > 0 &&\n        ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n            (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n    }\n    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n    velocity.multTo(zVelocityFactor);\n    const { position } = particle;\n    position.addTo(velocity);\n    if (moveOptions.vibrate) {\n        position.x += Math.sin(position.x * Math.cos(position.y));\n        position.y += Math.cos(position.y * Math.sin(position.x));\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === \"clockwise\" ? Math.cos : Math.sin,\n        y: particle.spin.direction === \"clockwise\" ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height);\n    if (particle.spin.radius > maxCanvasSize / 2) {\n        particle.spin.radius = maxCanvasSize / 2;\n        particle.spin.acceleration *= -1;\n    }\n    else if (particle.spin.radius < 0) {\n        particle.spin.radius = 0;\n        particle.spin.acceleration *= -1;\n    }\n    particle.spin.angle += (moveSpeed / 100) * (1 - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = particle.pathGenerator?.generate(particle, delta);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -1, 1);\n        particle.velocity.y = clamp(particle.velocity.y, -1, 1);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : 1;\n}\n","import { getDistance, getRangeMax, getRangeValue, } from \"tsparticles-engine\";\nimport { applyDistance, getProximitySpeedFactor, move, spin } from \"./Utils\";\nconst diffFactor = 2;\nexport class BaseMover {\n    constructor() {\n        this._initSpin = (particle) => {\n            const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n            if (!spinOptions.enable) {\n                return;\n            }\n            const spinPos = spinOptions.position ?? { x: 50, y: 50 }, spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        };\n    }\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        this._initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio, slowFactor = getProximitySpeedFactor(particle), baseSpeed = (particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio) *\n            container.retina.reduceFactor, moveDrift = (particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio), maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, moveSpeed = (baseSpeed * sizeFactor * slowFactor * (delta.factor || 1)) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n","import { BaseMover } from \"./BaseMover\";\nexport async function loadBaseMover(engine, refresh = true) {\n    await engine.addMover(\"base\", () => new BaseMover(), refresh);\n}\n","import { isObject } from \"tsparticles-engine\";\nexport class CircleDrawer {\n    draw(context, particle, radius) {\n        if (!particle.circleRange) {\n            particle.circleRange = { min: 0, max: Math.PI * 2 };\n        }\n        const circleRange = particle.circleRange;\n        context.arc(0, 0, radius, circleRange.min, circleRange.max, false);\n    }\n    getSidesCount() {\n        return 12;\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {\n            max: 360,\n            min: 0,\n        };\n        particle.circleRange = !isObject(angle)\n            ? {\n                min: 0,\n                max: (angle * Math.PI) / 180,\n            }\n            : { min: (angle.min * Math.PI) / 180, max: (angle.max * Math.PI) / 180 };\n    }\n}\n","import { CircleDrawer } from \"./CircleDrawer\";\nexport async function loadCircleShape(engine, refresh = true) {\n    await engine.addShape(\"circle\", new CircleDrawer(), refresh);\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateColor(particle, delta) {\n    const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateColor } from \"./Utils\";\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((color?.h.value !== undefined && hAnimation.enable) ||\n                (color?.s.value !== undefined && sAnimation.enable) ||\n                (color?.l.value !== undefined && lAnimation.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n","import { ColorUpdater } from \"./ColorUpdater\";\nexport async function loadColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"color\", (container) => new ColorUpdater(container), refresh);\n}\n","import { getRandom, getRangeValue, initParticleNumericAnimationValue, } from \"tsparticles-engine\";\nimport { updateOpacity } from \"./Utils\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, 1);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / 100) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? 0) <= 0 ||\n                ((particle.opacity.maxLoops ?? 0) > 0 &&\n                    (particle.opacity.loops ?? 0) < (particle.opacity.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateOpacity(particle, delta);\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.opacity.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateOpacity(particle, delta) {\n    const data = particle.opacity;\n    if (particle.destroyed || !data?.enable || ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n    }\n    if (data.velocity && data.decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { OpacityUpdater } from \"./OpacityUpdater\";\nexport async function loadOpacityUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"opacity\", (container) => new OpacityUpdater(container), refresh);\n}\n","import { calculateBounds, } from \"tsparticles-engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            \"bounce\",\n            \"bounce-vertical\",\n            \"bounce-horizontal\",\n            \"bounceVertical\",\n            \"bounceHorizontal\",\n            \"split\",\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { getValue } from \"tsparticles-engine\";\nexport function bounceHorizontal(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-horizontal\" &&\n        data.outMode !== \"bounceHorizontal\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"left\" && data.direction !== \"right\")) {\n        return;\n    }\n    if (data.bounds.right < 0 && data.direction === \"left\") {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === \"right\" && data.bounds.right >= data.canvasSize.width && velocity > 0) ||\n        (data.direction === \"left\" && data.bounds.left <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.horizontal);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= 0 && data.direction === \"left\") {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-vertical\" &&\n        data.outMode !== \"bounceVertical\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"bottom\" && data.direction !== \"top\")) {\n        return;\n    }\n    if (data.bounds.bottom < 0 && data.direction === \"top\") {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === \"bottom\" && data.bounds.bottom >= data.canvasSize.height && velocity > 0) ||\n        (data.direction === \"top\" && data.bounds.top <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.vertical);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= 0 && data.direction === \"top\") {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\n","import { Vector, getDistances, isPointInside, } from \"tsparticles-engine\";\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"destroy\"];\n    }\n    update(particle, direction, _delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"normal\":\n            case \"outside\":\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case \"inside\": {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                const { x: vx, y: vy } = particle.velocity;\n                if ((vx < 0 && dx > particle.moveCenter.radius) ||\n                    (vy < 0 && dy > particle.moveCenter.radius) ||\n                    (vx >= 0 && dx < -particle.moveCenter.radius) ||\n                    (vy >= 0 && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n}\n","import { Vector, isPointInside, } from \"tsparticles-engine\";\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"none\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === \"left\" || direction === \"right\")) ||\n            (particle.options.move.distance.vertical &&\n                (direction === \"top\" || direction === \"bottom\"))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container;\n        const canvasSize = container.canvas.size;\n        const pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < 0 && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < 0 && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === \"bottom\") ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === \"top\")) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"tsparticles-engine\";\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"out\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"inside\": {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= 0 && dx >= 0) || (vy <= 0 && dy >= 0) || (vx >= 0 && dx <= 0) || (vy >= 0 && dy <= 0)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case \"outside\": {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case \"normal\": {\n                        const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === \"right\" &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === \"left\" && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === \"bottom\" &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === \"top\" && nextBounds.bottom < -particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { BounceOutMode } from \"./BounceOutMode\";\nimport { DestroyOutMode } from \"./DestroyOutMode\";\nimport { NoneOutMode } from \"./NoneOutMode\";\nimport { OutOutMode } from \"./OutOutMode\";\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this.container = container;\n        this._updateOutMode = (particle, delta, outMode, direction) => {\n            for (const updater of this.updaters) {\n                updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.updaters = [\n            new BounceOutMode(container),\n            new DestroyOutMode(container),\n            new OutOutMode(container),\n            new NoneOutMode(container),\n        ];\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, \"bottom\");\n        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, \"left\");\n        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, \"right\");\n        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, \"top\");\n    }\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater\";\nexport async function loadOutModesUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"outModes\", (container) => new OutOfCanvasUpdater(container), refresh);\n}\n","import { getRandom } from \"tsparticles-engine\";\nimport { updateSize } from \"./Utils\";\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? 0) <= 0 ||\n                ((particle.size.maxLoops ?? 0) > 0 && (particle.size.loops ?? 0) < (particle.size.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        particle.size.loops = 0;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.size.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateSize(particle, delta) {\n    const data = particle.size;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const sizeVelocity = (data.velocity ?? 0) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += sizeVelocity;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= sizeVelocity;\n            }\n    }\n    if (data.velocity && decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { SizeUpdater } from \"./SizeUpdater\";\nexport async function loadSizeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"size\", () => new SizeUpdater(), refresh);\n}\n","import { loadBaseMover } from \"tsparticles-move-base\";\nimport { loadCircleShape } from \"tsparticles-shape-circle\";\nimport { loadColorUpdater } from \"tsparticles-updater-color\";\nimport { loadOpacityUpdater } from \"tsparticles-updater-opacity\";\nimport { loadOutModesUpdater } from \"tsparticles-updater-out-modes\";\nimport { loadSizeUpdater } from \"tsparticles-updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n    await loadBaseMover(engine, false);\n    await loadCircleShape(engine, false);\n    await loadColorUpdater(engine, false);\n    await loadOpacityUpdater(engine, false);\n    await loadOutModesUpdater(engine, false);\n    await loadSizeUpdater(engine, false);\n    await engine.refresh(refresh);\n}\n","import { addEasing } from \"tsparticles-engine\";\nexport async function loadEasingQuadPlugin() {\n    addEasing(\"ease-in-quad\", (value) => value ** 2);\n    addEasing(\"ease-out-quad\", (value) => 1 - (1 - value) ** 2);\n    addEasing(\"ease-in-out-quad\", (value) => (value < 0.5 ? 2 * value ** 2 : 1 - (-2 * value + 2) ** 2 / 2));\n}\n","export class ExternalInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"external\";\n    }\n}\n","export class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = \"ease-out-quad\";\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Vector, clamp, getDistances, getEasing, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Attract } from \"./Options/Classes/Attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickAttract = () => {\n            const container = this.container;\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            const { attract } = container;\n            if (!attract.finish) {\n                if (!attract.count) {\n                    attract.count = 0;\n                }\n                attract.count++;\n                if (attract.count === container.particles.count) {\n                    attract.finish = true;\n                }\n            }\n            if (attract.clicking) {\n                const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n                if (!attractRadius || attractRadius < 0 || !mousePos) {\n                    return;\n                }\n                this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n            }\n            else if (attract.clicking === false) {\n                attract.particles = [];\n            }\n            return;\n        };\n        this._hoverAttract = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n            if (!attractRadius || attractRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        };\n        this._processAttract = (position, attractRadius, area) => {\n            const container = this.container, attractOptions = container.actualOptions.interactivity.modes.attract;\n            if (!attractOptions) {\n                return;\n            }\n            const query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position);\n                const velocity = attractOptions.speed * attractOptions.factor;\n                const attractFactor = clamp(getEasing(attractOptions.easing)(1 - distance / attractRadius) * velocity, 0, attractOptions.maxSpeed);\n                const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n                particle.position.subFrom(normVec);\n            }\n        };\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== \"attract\") {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                if (!container.attract) {\n                    container.attract = { particles: [] };\n                }\n                container.attract.clicking = false;\n            }, attract.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this._hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this._clickAttract();\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source?.attract);\n        }\n    }\n    reset() {\n    }\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadExternalAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalAttract\", (container) => new Attractor(engine, container), refresh);\n}\nexport * from \"./Options/Classes/Attract\";\nexport * from \"./Options/Interfaces/IAttract\";\n","export class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, isDivModeEnabled, isInArray, mouseMoveEvent, rectBounce, } from \"tsparticles-engine\";\nimport { Bounce } from \"./Options/Classes/Bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._processBounce = (position, radius, area) => {\n            const query = this.container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                if (area instanceof Circle) {\n                    circleBounce(circleBounceDataFromParticle(particle), {\n                        position,\n                        radius,\n                        mass: (radius ** 2 * Math.PI) / 2,\n                        velocity: Vector.origin,\n                        factor: Vector.origin,\n                    });\n                }\n                else if (area instanceof Rectangle) {\n                    rectBounce(particle, calculateBounds(position, radius));\n                }\n            }\n        };\n        this._processMouseBounce = () => {\n            const container = this.container, pxRatio = container.retina.pixelRatio, tolerance = 10 * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n            if (!radius || radius < 0 || !mousePos) {\n                return;\n            }\n            this._processBounce(mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance));\n        };\n        this._singleSelectorBounce = (selector, div) => {\n            const container = this.container, query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, radius = (elem.offsetWidth / 2) * pxRatio, tolerance = 10 * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, radius + tolerance)\n                    : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n                this._processBounce(pos, radius, area);\n            });\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"bounce\", hoverMode)) {\n            this._processMouseBounce();\n        }\n        else {\n            divModeExecute(\"bounce\", divs, (selector, div) => this._singleSelectorBounce(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((mouse.position && events.onHover.enable && isInArray(\"bounce\", events.onHover.mode)) ||\n            isDivModeEnabled(\"bounce\", divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n","import { Bouncer } from \"./Bouncer\";\nexport async function loadExternalBounceInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBounce\", (container) => new Bouncer(container), refresh);\n}\nexport * from \"./Options/Classes/Bounce\";\nexport * from \"./Options/Interfaces/IBounce\";\n","import { OptionsColor, executeOnSingleOrMultiple, isArray, } from \"tsparticles-engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = isArray(this.color) ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, (color) => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nimport { BubbleDiv } from \"./BubbleDiv\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nexport function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"tsparticles-engine\";\nimport { Bubble } from \"./Options/Classes/Bubble\";\nimport { calculateBubbleValue } from \"./Utils\";\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._clickBubble = () => {\n            const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || !mouseClickPos) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            const distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, (p) => this.isEnabled(p)), { bubble } = container;\n            for (const particle of query) {\n                if (!bubble.clicking) {\n                    continue;\n                }\n                particle.bubble.inRange = !bubble.durationEnd;\n                const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n                if (timeSpent > bubbleOptions.duration) {\n                    bubble.durationEnd = true;\n                }\n                if (timeSpent > bubbleOptions.duration * 2) {\n                    bubble.clicking = false;\n                    bubble.durationEnd = false;\n                }\n                const sizeData = {\n                    bubbleObj: {\n                        optValue: container.retina.bubbleModeSize,\n                        value: particle.bubble.radius,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                        value: particle.size.value,\n                    },\n                    type: \"size\",\n                };\n                this._process(particle, distMouse, timeSpent, sizeData);\n                const opacityData = {\n                    bubbleObj: {\n                        optValue: bubbleOptions.opacity,\n                        value: particle.bubble.opacity,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.opacity.value),\n                        value: particle.opacity?.value ?? 1,\n                    },\n                    type: \"opacity\",\n                };\n                this._process(particle, distMouse, timeSpent, opacityData);\n                if (!bubble.durationEnd && distMouse <= distance) {\n                    this._hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n        };\n        this._hoverBubble = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0 || mousePos === undefined) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                particle.bubble.inRange = true;\n                const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = 1 - pointDistance / distance;\n                if (pointDistance <= distance) {\n                    if (ratio >= 0 && container.interactivity.status === mouseMoveEvent) {\n                        this._hoverBubbleSize(particle, ratio);\n                        this._hoverBubbleOpacity(particle, ratio);\n                        this._hoverBubbleColor(particle, ratio);\n                    }\n                }\n                else {\n                    this.reset(particle);\n                }\n                if (container.interactivity.status === mouseLeaveEvent) {\n                    this.reset(particle);\n                }\n            }\n        };\n        this._hoverBubbleColor = (particle, ratio, divBubble) => {\n            const options = this.container.actualOptions, bubbleOptions = divBubble ?? options.interactivity.modes.bubble;\n            if (!bubbleOptions) {\n                return;\n            }\n            if (!particle.bubble.finalColor) {\n                const modeColor = bubbleOptions.color;\n                if (!modeColor) {\n                    return;\n                }\n                const bubbleColor = itemFromSingleOrMultiple(modeColor);\n                particle.bubble.finalColor = rangeColorToHsl(bubbleColor);\n            }\n            if (!particle.bubble.finalColor) {\n                return;\n            }\n            if (bubbleOptions.mix) {\n                particle.bubble.color = undefined;\n                const pColor = particle.getFillColor();\n                particle.bubble.color = pColor\n                    ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                    : particle.bubble.finalColor;\n            }\n            else {\n                particle.bubble.color = particle.bubble.finalColor;\n            }\n        };\n        this._hoverBubbleOpacity = (particle, ratio, divBubble) => {\n            const container = this.container, options = container.actualOptions, modeOpacity = divBubble?.opacity ?? options.interactivity.modes.bubble?.opacity;\n            if (!modeOpacity) {\n                return;\n            }\n            const optOpacity = particle.options.opacity.value, pOpacity = particle.opacity?.value ?? 1, opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n            if (opacity !== undefined) {\n                particle.bubble.opacity = opacity;\n            }\n        };\n        this._hoverBubbleSize = (particle, ratio, divBubble) => {\n            const container = this.container, modeSize = divBubble?.size ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n            if (modeSize === undefined) {\n                return;\n            }\n            const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio, pSize = particle.size.value, size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n            if (size !== undefined) {\n                particle.bubble.radius = size;\n            }\n        };\n        this._process = (particle, distMouse, timeSpent, data) => {\n            const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || bubbleParam === undefined) {\n                return;\n            }\n            const bubbleDuration = bubbleOptions.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n            if (!bubbleDistance || bubbleDistance < 0 || bubbleParam === particlesParam) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            if (container.bubble.durationEnd) {\n                if (pObjBubble) {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble ?? pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === \"size\") {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === \"opacity\") {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n        };\n        this._singleSelectorHover = (delta, selector, div) => {\n            const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n            if (!bubble || !selectors.length) {\n                return;\n            }\n            selectors.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    if (!area.contains(particle.getPosition())) {\n                        continue;\n                    }\n                    particle.bubble.inRange = true;\n                    const divs = bubble.divs, divBubble = divMode(divs, elem);\n                    if (!particle.bubble.div || particle.bubble.div !== elem) {\n                        this.clear(particle, delta, true);\n                        particle.bubble.div = elem;\n                    }\n                    this._hoverBubbleSize(particle, 1, divBubble);\n                    this._hoverBubbleOpacity(particle, 1, divBubble);\n                    this._hoverBubbleColor(particle, 1, divBubble);\n                }\n            });\n        };\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== \"bubble\") {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    async interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n            this._hoverBubble();\n        }\n        else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n            this._clickBubble();\n        }\n        else {\n            divModeExecute(\"bubble\", divs, (selector, div) => this._singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, { onClick, onDiv, onHover } = events, divBubble = isDivModeEnabled(\"bubble\", onDiv);\n        if (!(divBubble || (onHover.enable && mouse.position) || (onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        return isInArray(\"bubble\", onHover.mode) || isInArray(\"bubble\", onClick.mode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source?.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n}\n","import { Bubbler } from \"./Bubbler\";\nexport async function loadExternalBubbleInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBubble\", (container) => new Bubbler(container), refresh);\n}\nexport * from \"./Options/Classes/BubbleBase\";\nexport * from \"./Options/Classes/BubbleDiv\";\nexport * from \"./Options/Classes/Bubble\";\nexport * from \"./Options/Interfaces/IBubbleBase\";\nexport * from \"./Options/Interfaces/IBubbleDiv\";\nexport * from \"./Options/Interfaces/IBubble\";\n","export class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { ConnectLinks } from \"./ConnectLinks\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, } from \"tsparticles-engine\";\nexport function gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nexport function drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nexport function lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nexport function drawConnection(container, p1, p2) {\n    container.canvas.draw((ctx) => {\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, p1.retina.linksWidth ?? 0, ls, pos1, pos2);\n    });\n}\n","import { ExternalInteractorBase, isInArray, } from \"tsparticles-engine\";\nimport { Connect } from \"./Options/Classes/Connect\";\nimport { drawConnection } from \"./Utils\";\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!container.retina.connectModeDistance ||\n                container.retina.connectModeDistance < 0 ||\n                !container.retina.connectModeRadius ||\n                container.retina.connectModeRadius < 0 ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(container.retina.connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(\"connect\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source?.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { Connector } from \"./Connector\";\nexport async function loadExternalConnectInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalConnect\", (container) => new Connector(container), refresh);\n}\nexport * from \"./Options/Classes/Connect\";\nexport * from \"./Options/Classes/ConnectLinks\";\nexport * from \"./Options/Interfaces/IConnect\";\nexport * from \"./Options/Interfaces/IConnectLinks\";\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { GrabLinks } from \"./GrabLinks\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n    }\n}\n","import { drawLine, getStyleFromRgb } from \"tsparticles-engine\";\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nexport function drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw((ctx) => {\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, particle.retina.linksWidth ?? 0, beginPos, mousePos, lineColor, opacity);\n    });\n}\n","import { ExternalInteractorBase, getDistance, getLinkColor, getLinkRandomColor, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Grab } from \"./Options/Classes/Grab\";\nimport { drawGrab } from \"./Utils\";\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= 0) {\n                continue;\n            }\n            const optColor = grabLineOptions.color ?? particle.options.links?.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                continue;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source?.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { Grabber } from \"./Grabber\";\nexport async function loadExternalGrabInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalGrab\", (container) => new Grabber(container), refresh);\n}\nexport * from \"./Options/Classes/Grab\";\nexport * from \"./Options/Classes/GrabLinks\";\nexport * from \"./Options/Interfaces/IGrab\";\nexport * from \"./Options/Interfaces/IGrabLinks\";\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"pause\") {\n                return;\n            }\n            const container = this.container;\n            if (container.getAnimationStatus()) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","import { Pauser } from \"./Pauser\";\nexport async function loadExternalPauseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPause\", (container) => new Pauser(container), refresh);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map((t) => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, itemFromArray, } from \"tsparticles-engine\";\nimport { Push } from \"./Options/Classes/Push\";\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"push\") {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const quantity = getRangeValue(pushOptions.quantity);\n            if (quantity <= 0) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            container.particles.push(quantity, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source?.push);\n        }\n    }\n    reset() {\n    }\n}\n","import { Pusher } from \"./Pusher\";\nexport async function loadExternalPushInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPush\", (container) => new Pusher(container), refresh);\n}\nexport * from \"./Options/Classes/Push\";\nexport * from \"./Options/Interfaces/IPush\";\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== \"remove\") {\n                return;\n            }\n            const removeNb = getRangeValue(options.interactivity.modes.remove.quantity);\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source?.remove);\n        }\n    }\n    reset() {\n    }\n}\n","import { Remover } from \"./Remover\";\nexport async function loadExternalRemoveInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRemove\", (container) => new Remover(container), refresh);\n}\nexport * from \"./Options/Classes/Remove\";\nexport * from \"./Options/Interfaces/IRemove\";\n","export class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = \"ease-out-quad\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nimport { RepulseDiv } from \"./RepulseDiv\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, getEasing, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Repulse } from \"./Options/Classes/Repulse\";\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickRepulse = () => {\n            const container = this.container, repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const repulse = container.repulse || { particles: [] };\n            if (!repulse.finish) {\n                if (!repulse.count) {\n                    repulse.count = 0;\n                }\n                repulse.count++;\n                if (repulse.count === container.particles.count) {\n                    repulse.finish = true;\n                }\n            }\n            if (repulse.clicking) {\n                const repulseDistance = container.retina.repulseModeDistance;\n                if (!repulseDistance || repulseDistance < 0) {\n                    return;\n                }\n                const repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n                if (mouseClickPos === undefined) {\n                    return;\n                }\n                const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** 2, velocity = repulseOptions.speed, force = (-repulseRadius * velocity) / d;\n                    if (d <= repulseRadius) {\n                        repulse.particles.push(particle);\n                        const vect = Vector.create(dx, dy);\n                        vect.length = force;\n                        particle.velocity.setTo(vect);\n                    }\n                }\n            }\n            else if (repulse.clicking === false) {\n                for (const particle of repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                repulse.particles = [];\n            }\n        };\n        this._hoverRepulse = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n            if (!repulseRadius || repulseRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n        };\n        this._processRepulse = (position, repulseRadius, area, divRepulse) => {\n            const container = this.container, query = container.particles.quadTree.query(area, (p) => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position), velocity = (divRepulse?.speed ?? repulseOptions.speed) * repulseOptions.factor, repulseFactor = clamp(getEasing(repulseOptions.easing)(1 - distance / repulseRadius) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n                particle.position.addTo(normVec);\n            }\n        };\n        this._singleSelectorRepulse = (selector, div) => {\n            const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n            if (!repulse) {\n                return;\n            }\n            const query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n                this._processRepulse(pos, repulseRadius, area, divRepulse);\n            });\n        };\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulseOpts = options.interactivity.modes.repulse;\n            if (!repulseOpts || mode !== \"repulse\") {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            const repulse = container.repulse;\n            repulse.clicking = true;\n            repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            repulse.particles = [];\n            repulse.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                repulse.clicking = false;\n            }, repulseOpts.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hover = events.onHover, hoverEnabled = hover.enable, hoverMode = hover.mode, click = events.onClick, clickEnabled = click.enable, clickMode = click.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n            this._hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n            this._clickRepulse();\n        }\n        else {\n            divModeExecute(\"repulse\", divs, (selector, div) => this._singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv, hover = events.onHover, click = events.onClick, divRepulse = isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (hover.enable && mouse.position) || (click.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = hover.mode, clickMode = click.mode;\n        return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source?.repulse);\n        }\n    }\n    reset() {\n    }\n}\n","import { Repulser } from \"./Repulser\";\nexport async function loadExternalRepulseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRepulse\", (container) => new Repulser(engine, container), refresh);\n}\nexport * from \"./Options/Classes/RepulseBase\";\nexport * from \"./Options/Classes/RepulseDiv\";\nexport * from \"./Options/Classes/Repulse\";\nexport * from \"./Options/Interfaces/IRepulseBase\";\nexport * from \"./Options/Interfaces/IRepulseDiv\";\nexport * from \"./Options/Interfaces/IRepulse\";\n","export class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, getDistance, isInArray, } from \"tsparticles-engine\";\nimport { Slow } from \"./Options/Classes/Slow\";\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"slow\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source?.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;\n        if (!slowOptions || !radius || radius < 0 || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;\n        if (dist > radius) {\n            return;\n        }\n        slow.inRange = true;\n        slow.factor = proximityFactor / slowFactor;\n    }\n}\n","import { Slower } from \"./Slower\";\nexport async function loadExternalSlowInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalSlow\", (container) => new Slower(container), refresh);\n}\nexport * from \"./Options/Classes/Slow\";\nexport * from \"./Options/Interfaces/ISlow\";\n","export const InterlaceOffsets = [0, 4, 2, 1];\nexport const InterlaceSteps = [8, 8, 4, 2];\n","export class ByteStream {\n    constructor(bytes) {\n        this.pos = 0;\n        this.data = new Uint8ClampedArray(bytes);\n    }\n    getString(count) {\n        const slice = this.data.slice(this.pos, this.pos + count);\n        this.pos += slice.length;\n        return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\n    }\n    nextByte() {\n        return this.data[this.pos++];\n    }\n    nextTwoBytes() {\n        this.pos += 2;\n        return this.data[this.pos - 2] + (this.data[this.pos - 1] << 8);\n    }\n    readSubBlocks() {\n        let blockString = \"\", size = 0;\n        do {\n            size = this.data[this.pos++];\n            for (let count = size; --count >= 0; blockString += String.fromCharCode(this.data[this.pos++])) {\n            }\n        } while (size !== 0);\n        return blockString;\n    }\n    readSubBlocksBin() {\n        let size = 0, len = 0;\n        for (let offset = 0; (size = this.data[this.pos + offset]) !== 0; offset += size + 1) {\n            len += size;\n        }\n        const blockData = new Uint8Array(len);\n        for (let i = 0; (size = this.data[this.pos++]) !== 0;) {\n            for (let count = size; --count >= 0; blockData[i++] = this.data[this.pos++]) {\n            }\n        }\n        return blockData;\n    }\n    skipSubBlocks() {\n        for (; this.data[this.pos] !== 0; this.pos += this.data[this.pos] + 1) {\n        }\n        this.pos++;\n    }\n}\n","import { InterlaceOffsets, InterlaceSteps } from \"./Constants\";\nimport { ByteStream } from \"./ByteStream\";\nfunction parseColorTable(byteStream, count) {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n        colors.push({\n            r: byteStream.data[byteStream.pos],\n            g: byteStream.data[byteStream.pos + 1],\n            b: byteStream.data[byteStream.pos + 2],\n        });\n        byteStream.pos += 3;\n    }\n    return colors;\n}\nasync function parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {\n    switch (byteStream.nextByte()) {\n        case 249: {\n            const frame = gif.frames[getFrameIndex(false)];\n            byteStream.pos++;\n            const packedByte = byteStream.nextByte();\n            frame.GCreserved = (packedByte & 0xe0) >>> 5;\n            frame.disposalMethod = (packedByte & 0x1c) >>> 2;\n            frame.userInputDelayFlag = (packedByte & 2) === 2;\n            const transparencyFlag = (packedByte & 1) === 1;\n            frame.delayTime = byteStream.nextTwoBytes() * 0xa;\n            const transparencyIndex = byteStream.nextByte();\n            if (transparencyFlag) {\n                getTransparencyIndex(transparencyIndex);\n            }\n            byteStream.pos++;\n            break;\n        }\n        case 255: {\n            byteStream.pos++;\n            const applicationExtension = {\n                identifier: byteStream.getString(8),\n                authenticationCode: byteStream.getString(3),\n                data: byteStream.readSubBlocksBin(),\n            };\n            gif.applicationExtensions.push(applicationExtension);\n            break;\n        }\n        case 254: {\n            gif.comments.push([getFrameIndex(false), byteStream.readSubBlocks()]);\n            break;\n        }\n        case 1: {\n            if (gif.globalColorTable.length === 0) {\n                throw new EvalError(\"plain text extension without global color table\");\n            }\n            byteStream.pos++;\n            gif.frames[getFrameIndex(false)].plainTextData = {\n                left: byteStream.nextTwoBytes(),\n                top: byteStream.nextTwoBytes(),\n                width: byteStream.nextTwoBytes(),\n                height: byteStream.nextTwoBytes(),\n                charSize: {\n                    width: byteStream.nextTwoBytes(),\n                    height: byteStream.nextTwoBytes(),\n                },\n                foregroundColor: byteStream.nextByte(),\n                backgroundColor: byteStream.nextByte(),\n                text: byteStream.readSubBlocks(),\n            };\n            break;\n        }\n        default:\n            byteStream.skipSubBlocks();\n            break;\n    }\n}\nasync function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    const frame = gif.frames[getFrameIndex(true)];\n    frame.left = byteStream.nextTwoBytes();\n    frame.top = byteStream.nextTwoBytes();\n    frame.width = byteStream.nextTwoBytes();\n    frame.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;\n    frame.sortFlag = (packedByte & 0x20) === 0x20;\n    frame.reserved = (packedByte & 0x18) >>> 3;\n    const localColorCount = 1 << ((packedByte & 7) + 1);\n    if (localColorTableFlag) {\n        frame.localColorTable = parseColorTable(byteStream, localColorCount);\n    }\n    const getColor = (index) => {\n        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];\n        return { r, g, b, a: index === getTransparencyIndex(null) ? (avgAlpha ? ~~((r + g + b) / 3) : 0) : 255 };\n    };\n    const image = (() => {\n        try {\n            return new ImageData(frame.width, frame.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (image == null) {\n        throw new EvalError(\"GIF frame size is to large\");\n    }\n    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;\n    const readBits = (pos, len) => {\n        const bytePos = pos >>> 3, bitPos = pos & 7;\n        return (((imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16)) &\n            (((1 << len) - 1) << bitPos)) >>>\n            bitPos);\n    };\n    if (interlacedFlag) {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pass = 0; pass < 4; pass++) {\n            if (InterlaceOffsets[pass] < frame.height) {\n                for (let pixelPos = 0, lineIndex = 0;;) {\n                    const last = code;\n                    code = readBits(pos, size);\n                    pos += size + 1;\n                    if (code === clearCode) {\n                        size = minCodeSize + 1;\n                        dic.length = clearCode + 2;\n                        for (let i = 0; i < dic.length; i++) {\n                            dic[i] = i < clearCode ? [i] : [];\n                        }\n                    }\n                    else {\n                        if (code >= dic.length) {\n                            dic.push(dic[last].concat(dic[last][0]));\n                        }\n                        else if (last !== clearCode) {\n                            dic.push(dic[last].concat(dic[code][0]));\n                        }\n                        for (let i = 0; i < dic[code].length; i++) {\n                            const { r, g, b, a } = getColor(dic[code][i]);\n                            image.data.set([r, g, b, a], InterlaceOffsets[pass] * frame.width +\n                                InterlaceSteps[pass] * lineIndex +\n                                (pixelPos % (frame.width * 4)));\n                            pixelPos += 4;\n                        }\n                        if (dic.length === 1 << size && size < 0xc) {\n                            size++;\n                        }\n                    }\n                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {\n                        lineIndex++;\n                        if (InterlaceOffsets[pass] + InterlaceSteps[pass] * lineIndex >= frame.height) {\n                            break;\n                        }\n                    }\n                }\n            }\n            progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n    }\n    else {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pixelPos = -4;;) {\n            const last = code;\n            code = readBits(pos, size);\n            pos += size;\n            if (code === clearCode) {\n                size = minCodeSize + 1;\n                dic.length = clearCode + 2;\n                for (let i = 0; i < dic.length; i++) {\n                    dic[i] = i < clearCode ? [i] : [];\n                }\n            }\n            else {\n                if (code === clearCode + 1) {\n                    break;\n                }\n                if (code >= dic.length) {\n                    dic.push(dic[last].concat(dic[last][0]));\n                }\n                else if (last !== clearCode) {\n                    dic.push(dic[last].concat(dic[code][0]));\n                }\n                for (let i = 0; i < dic[code].length; i++) {\n                    const { r, g, b, a } = getColor(dic[code][i]);\n                    image.data.set([r, g, b, a], (pixelPos += 4));\n                }\n                if (dic.length >= 1 << size && size < 0xc) {\n                    size++;\n                }\n            }\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n        progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n    }\n}\nasync function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    switch (byteStream.nextByte()) {\n        case 59:\n            return true;\n        case 44:\n            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);\n            break;\n        case 33:\n            await parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);\n            break;\n        default:\n            throw new EvalError(\"undefined block found\");\n    }\n    return false;\n}\nexport function getGIFLoopAmount(gif) {\n    for (const extension of gif.applicationExtensions) {\n        if (extension.identifier + extension.authenticationCode !== \"NETSCAPE2.0\") {\n            continue;\n        }\n        return extension.data[1] + (extension.data[2] << 8);\n    }\n    return NaN;\n}\nexport async function decodeGIF(gifURL, progressCallback, avgAlpha) {\n    if (!avgAlpha)\n        avgAlpha = false;\n    const res = await fetch(gifURL);\n    if (!res.ok && res.status === 404) {\n        throw new EvalError(\"file not found\");\n    }\n    const buffer = await res.arrayBuffer();\n    const gif = {\n        width: 0,\n        height: 0,\n        totalTime: 0,\n        colorRes: 0,\n        pixelAspectRatio: 0,\n        frames: [],\n        sortFlag: false,\n        globalColorTable: [],\n        backgroundImage: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n        comments: [],\n        applicationExtensions: [],\n    }, byteStream = new ByteStream(new Uint8ClampedArray(buffer));\n    if (byteStream.getString(6) !== \"GIF89a\") {\n        throw new Error(\"not a supported GIF file\");\n    }\n    gif.width = byteStream.nextTwoBytes();\n    gif.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;\n    gif.colorRes = (packedByte & 0x70) >>> 4;\n    gif.sortFlag = (packedByte & 8) === 8;\n    const globalColorCount = 1 << ((packedByte & 7) + 1), backgroundColorIndex = byteStream.nextByte();\n    gif.pixelAspectRatio = byteStream.nextByte();\n    if (gif.pixelAspectRatio !== 0) {\n        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;\n    }\n    if (globalColorTableFlag) {\n        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);\n    }\n    const backgroundImage = (() => {\n        try {\n            return new ImageData(gif.width, gif.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (backgroundImage == null) {\n        throw new Error(\"GIF frame size is to large\");\n    }\n    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];\n    backgroundImage.data.set(globalColorTableFlag ? [r, g, b, 255] : [0, 0, 0, 0]);\n    for (let i = 4; i < backgroundImage.data.length; i *= 2) {\n        backgroundImage.data.copyWithin(i, 0, i);\n    }\n    gif.backgroundImage = backgroundImage;\n    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;\n    const getframeIndex = (increment) => {\n        if (increment) {\n            incrementFrameIndex = true;\n        }\n        return frameIndex;\n    };\n    const getTransparencyIndex = (newValue) => {\n        if (newValue != null) {\n            transparencyIndex = newValue;\n        }\n        return transparencyIndex;\n    };\n    try {\n        do {\n            if (incrementFrameIndex) {\n                gif.frames.push({\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                    disposalMethod: 0,\n                    image: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n                    plainTextData: null,\n                    userInputDelayFlag: false,\n                    delayTime: 0,\n                    sortFlag: false,\n                    localColorTable: [],\n                    reserved: 0,\n                    GCreserved: 0,\n                });\n                frameIndex++;\n                transparencyIndex = -1;\n                incrementFrameIndex = false;\n            }\n        } while (!(await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback)));\n        gif.frames.length--;\n        for (const frame of gif.frames) {\n            if (frame.userInputDelayFlag && frame.delayTime === 0) {\n                gif.totalTime = Infinity;\n                break;\n            }\n            gif.totalTime += frame.delayTime;\n        }\n        return gif;\n    }\n    catch (error) {\n        if (error instanceof EvalError) {\n            throw new Error(`error while parsing frame ${frameIndex} \"${error.message}\"`);\n        }\n        throw error;\n    }\n}\n","import { errorPrefix, getLogger, getStyleFromHsl } from \"tsparticles-engine\";\nimport { decodeGIF, getGIFLoopAmount } from \"./GifUtils/Utils\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? 0;\n        if (image.gifLoopCount === 0) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? 1), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor ?? imageData.replace_color,\n        source: imageData.src,\n    };\n    return new Promise((resolve) => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        img.addEventListener(\"error\", async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        });\n        img.src = url;\n    });\n}\n","import { errorPrefix } from \"tsparticles-engine\";\nimport { replaceImageColor } from \"./Utils\";\nexport class ImageDrawer {\n    constructor(engine) {\n        this.loadImageShape = async (imageShape) => {\n            if (!this._engine.loadImage) {\n                throw new Error(`${errorPrefix} image shape not initialized`);\n            }\n            await this._engine.loadImage({\n                gif: imageShape.gif,\n                name: imageShape.name,\n                replaceColor: imageShape.replaceColor ?? imageShape.replace_color ?? false,\n                src: imageShape.src,\n            });\n        };\n        this._engine = engine;\n    }\n    addImage(image) {\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        this._engine.images.push(image);\n    }\n    draw(context, particle, radius, opacity, delta) {\n        const image = particle.image, element = image?.element;\n        if (!image) {\n            return;\n        }\n        context.globalAlpha = opacity;\n        if (image.gif && image.gifData) {\n            const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext(\"2d\");\n            if (!offscreenContext) {\n                throw new Error(\"could not create offscreen canvas context\");\n            }\n            offscreenContext.imageSmoothingQuality = \"low\";\n            offscreenContext.imageSmoothingEnabled = false;\n            offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n            if (particle.gifLoopCount === undefined) {\n                particle.gifLoopCount = image.gifLoopCount ?? 0;\n            }\n            let frameIndex = particle.gifFrame ?? 0;\n            const pos = { x: -image.gifData.width * 0.5, y: -image.gifData.height * 0.5 }, frame = image.gifData.frames[frameIndex];\n            if (particle.gifTime === undefined) {\n                particle.gifTime = 0;\n            }\n            if (!frame.bitmap) {\n                return;\n            }\n            context.scale(radius / image.gifData.width, radius / image.gifData.height);\n            switch (frame.disposalMethod) {\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 0:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    break;\n                case 1:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    break;\n                case 2:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    if (image.gifData.globalColorTable.length === 0) {\n                        offscreenContext.putImageData(image.gifData.frames[0].image, pos.x + frame.left, pos.y + frame.top);\n                    }\n                    else {\n                        offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);\n                    }\n                    break;\n                case 3:\n                    {\n                        const previousImageData = offscreenContext.getImageData(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                        context.drawImage(offscreenCanvas, pos.x, pos.y);\n                        offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.putImageData(previousImageData, 0, 0);\n                    }\n                    break;\n            }\n            particle.gifTime += delta.value;\n            if (particle.gifTime > frame.delayTime) {\n                particle.gifTime -= frame.delayTime;\n                if (++frameIndex >= image.gifData.frames.length) {\n                    if (--particle.gifLoopCount <= 0) {\n                        return;\n                    }\n                    frameIndex = 0;\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                }\n                particle.gifFrame = frameIndex;\n            }\n            context.scale(image.gifData.width / radius, image.gifData.height / radius);\n        }\n        else if (element) {\n            const ratio = image.ratio, pos = {\n                x: -radius,\n                y: -radius,\n            };\n            context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (!options.preload || !this._engine.loadImage) {\n            return;\n        }\n        for (const imageData of options.preload) {\n            await this._engine.loadImage(imageData);\n        }\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const imageData = particle.shapeData, image = this._engine.images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            this.loadImageShape(imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const images = this._engine.images, imageData = particle.shapeData, color = particle.getFillColor(), image = images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        const replaceColor = imageData.replaceColor ?? imageData.replace_color ?? image.replaceColor;\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        (async () => {\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    gif: image.gif,\n                    gifData: image.gifData,\n                    gifLoopCount: image.gifLoopCount,\n                    loaded: true,\n                    ratio: imageData.width && imageData.height ? imageData.width / imageData.height : image.ratio ?? 1,\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = imageData.fill ?? particle.fill, close = imageData.close ?? particle.close, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.fill = imageShape.fill;\n            particle.close = imageShape.close;\n        })();\n    }\n}\n","export class Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { Preload } from \"./Options/Classes/Preload\";\nexport class ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    getPlugin() {\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source || !source.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find((t) => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { downloadSvgImage, loadGifImage, loadImage } from \"./Utils\";\nimport { ImageDrawer } from \"./ImageDrawer\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader\";\nimport { errorPrefix } from \"tsparticles-engine\";\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - 3),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            const imageFunc = data.gif ? loadGifImage : data.replaceColor ? downloadSvgImage : loadImage;\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nexport async function loadImageShape(engine, refresh = true) {\n    addLoadImageToEngine(engine);\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape([\"image\", \"images\"], new ImageDrawer(engine), refresh);\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.0001;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { LifeDelay } from \"./LifeDelay\";\nimport { LifeDuration } from \"./LifeDuration\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { getRandom, getRangeValue, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nimport { Life } from \"./Options/Classes/Life\";\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= 0) {\n            particle.life.duration = -1;\n        }\n        if (particle.life.count <= 0) {\n            particle.life.count = -1;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > 0;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source?.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        const life = particle.life;\n        let justSpawned = false;\n        if (particle.spawning) {\n            life.delayTime += delta.value;\n            if (life.delayTime >= particle.life.delay) {\n                justSpawned = true;\n                particle.spawning = false;\n                life.delayTime = 0;\n                life.time = 0;\n            }\n            else {\n                return;\n            }\n        }\n        if (life.duration === -1) {\n            return;\n        }\n        if (particle.spawning) {\n            return;\n        }\n        if (justSpawned) {\n            life.time = 0;\n        }\n        else {\n            life.time += delta.value;\n        }\n        if (life.time < life.duration) {\n            return;\n        }\n        life.time = 0;\n        if (particle.life.count > 0) {\n            particle.life.count--;\n        }\n        if (particle.life.count === 0) {\n            particle.destroy();\n            return;\n        }\n        const canvasSize = this.container.canvas.size, widthRange = setRangeValue(0, canvasSize.width), heightRange = setRangeValue(0, canvasSize.width);\n        particle.position.x = randomInRange(widthRange);\n        particle.position.y = randomInRange(heightRange);\n        particle.spawning = true;\n        life.delayTime = 0;\n        life.time = 0;\n        particle.reset();\n        const lifeOptions = particle.options.life;\n        if (lifeOptions) {\n            life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n            life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n        }\n    }\n}\n","import { LifeUpdater } from \"./LifeUpdater\";\nexport async function loadLifeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"life\", (container) => new LifeUpdater(container), refresh);\n}\n","export class LineDrawer {\n    draw(context, particle, radius) {\n        const shapeData = particle.shapeData;\n        context.moveTo(-radius / 2, 0);\n        context.lineTo(radius / 2, 0);\n        context.lineCap = shapeData?.cap ?? \"butt\";\n    }\n    getSidesCount() {\n        return 1;\n    }\n}\n","import { LineDrawer } from \"./LineDrawer\";\nexport async function loadLineShape(engine, refresh = true) {\n    await engine.addShape(\"line\", new LineDrawer(), refresh);\n}\n","import { isSsr } from \"tsparticles-engine\";\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions, parallaxOptions = options.interactivity.events.onHover.parallax;\n        if (isSsr() || !parallaxOptions.enable) {\n            return;\n        }\n        const parallaxForce = parallaxOptions.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasSize = container.canvas.size, canvasCenter = {\n            x: canvasSize.width / 2,\n            y: canvasSize.height / 2,\n        }, parallaxSmooth = parallaxOptions.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        }, { offset } = particle;\n        offset.x += (centerDistance.x - offset.x) / parallaxSmooth;\n        offset.y += (centerDistance.y - offset.y) / parallaxSmooth;\n    }\n}\n","import { ParallaxMover } from \"./ParallaxMover\";\nexport async function loadParallaxMover(engine, refresh = true) {\n    await engine.addMover(\"parallax\", () => new ParallaxMover(), refresh);\n}\n","export class ParticlesInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"particles\";\n    }\n}\n","import { ParticlesInteractorBase, getDistances, } from \"tsparticles-engine\";\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1) {\n        const container = this.container, distance = p1.retina.attractDistance ?? container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadParticlesAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesAttract\", (container) => new Attractor(container), refresh);\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / 10, 0, r2);\n    p1.size.value += factor / 2;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle, getRangeValue } from \"tsparticles-engine\";\nconst fixBounceSpeed = (p) => {\n    if (p.collisionMaxSpeed === undefined) {\n        p.collisionMaxSpeed = getRangeValue(p.options.collisions.maxSpeed);\n    }\n    if (p.velocity.length > p.collisionMaxSpeed) {\n        p.velocity.length = p.collisionMaxSpeed;\n    }\n};\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n    fixBounceSpeed(p1);\n    fixBounceSpeed(p2);\n}\n","import { absorb } from \"./Absorb\";\nimport { bounce } from \"./Bounce\";\nimport { destroy } from \"./Destroy\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case \"absorb\": {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case \"bounce\": {\n            bounce(p1, p2);\n            break;\n        }\n        case \"destroy\": {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { bounce } from \"./Bounce\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p2 : p1;\n        deleteP.destroy();\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1, delta) {\n        if (p1.destroyed || p1.spawning) {\n            return;\n        }\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { Collider } from \"./Collider\";\nexport async function loadParticlesCollisionsInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesCollisions\", (container) => new Collider(container), refresh);\n}\n","import { Circle, Rectangle } from \"tsparticles-engine\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = { ...canvasSize };\n    }\n    contains(point) {\n        const { width, height } = this.canvasSize;\n        const { x, y } = point;\n        return (super.contains(point) ||\n            super.contains({ x: x - width, y }) ||\n            super.contains({ x: x - width, y: y - height }) ||\n            super.contains({ x, y: y - height }));\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nimport { LinksShadow } from \"./LinksShadow\";\nimport { LinksTriangle } from \"./LinksTriangle\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistances, getLinkRandomColor, } from \"tsparticles-engine\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Links } from \"./Options/Classes/Links\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    const { dx, dy, distance } = getDistances(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const absDiffs = {\n        x: Math.abs(dx),\n        y: Math.abs(dy),\n    }, warpDistances = {\n        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),\n        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y),\n    };\n    return Math.sqrt(warpDistances.x ** 2 + warpDistances.y ** 2);\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n        this._setColor = (p1) => {\n            if (!p1.options.links) {\n                return;\n            }\n            const container = this.linkContainer, linksOptions = p1.options.links;\n            let linkColor = linksOptions.id === undefined\n                ? container.particles.linksColor\n                : container.particles.linksColors.get(linksOptions.id);\n            if (linkColor) {\n                return;\n            }\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        };\n        this.linkContainer = container;\n    }\n    clear() {\n    }\n    init() {\n        this.linkContainer.particles.linksColor = undefined;\n        this.linkContainer.particles.linksColors = new Map();\n    }\n    async interact(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = p1.retina.linksDistance ?? 0, warp = linkOpt1.warp, range = warp\n            ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle(pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2?.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.some((t) => t.destination === p2) ||\n                p2.links.some((t) => t.destination === p1)) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                continue;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this._setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        return !!particle.options.links?.enable;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load(source?.links ?? source?.lineLinked ?? source?.line_linked);\n        }\n    }\n    reset() {\n    }\n}\n","import { Linker } from \"./Linker\";\nexport async function loadLinksInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesLinks\", (container) => new Linker(container), refresh);\n}\n","import { drawLine, drawTriangle, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb, } from \"tsparticles-engine\";\nexport function drawLinkLine(params) {\n    let drawn = false;\n    const { begin, end, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (links.warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    const { shadow } = links;\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(params) {\n    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexport function getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map((t) => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\n","import { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { drawLinkLine, drawLinkTriangle, setLinkFrequency } from \"./Utils\";\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n        this._drawLinkLine = (p1, link) => {\n            const p1LinksOptions = p1.options.links;\n            if (!p1LinksOptions?.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            let opacity = link.opacity;\n            container.canvas.draw((ctx) => {\n                let colorLine;\n                const twinkle = p1.options.twinkle?.lines;\n                if (twinkle?.enable) {\n                    const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(twinkle.color), twinkling = getRandom() < twinkleFreq;\n                    if (twinkling && twinkleRgb) {\n                        colorLine = twinkleRgb;\n                        opacity = getRangeValue(twinkle.opacity);\n                    }\n                }\n                if (!colorLine) {\n                    const linkColor = p1LinksOptions.id !== undefined\n                        ? container.particles.linksColors.get(p1LinksOptions.id)\n                        : container.particles.linksColor;\n                    colorLine = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorLine) {\n                    return;\n                }\n                const width = p1.retina.linksWidth ?? 0, maxDistance = p1.retina.linksDistance ?? 0, { backgroundMask } = options;\n                drawLinkLine({\n                    context: ctx,\n                    width,\n                    begin: pos1,\n                    end: pos2,\n                    maxDistance,\n                    canvasSize: container.canvas.size,\n                    links: p1LinksOptions,\n                    backgroundMask: backgroundMask,\n                    colorLine,\n                    opacity,\n                });\n            });\n        };\n        this._drawLinkTriangle = (p1, link1, link2) => {\n            const linksOptions = p1.options.links;\n            if (!linksOptions?.enable) {\n                return;\n            }\n            const triangleOptions = linksOptions.triangles;\n            if (!triangleOptions.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, opacityTriangle = triangleOptions.opacity ?? (link1.opacity + link2.opacity) / 2;\n            if (opacityTriangle <= 0) {\n                return;\n            }\n            container.canvas.draw((ctx) => {\n                const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = p1.retina.linksDistance ?? 0;\n                if (getDistance(pos1, pos2) > linksDistance ||\n                    getDistance(pos3, pos2) > linksDistance ||\n                    getDistance(pos3, pos1) > linksDistance) {\n                    return;\n                }\n                let colorTriangle = rangeColorToRgb(triangleOptions.color);\n                if (!colorTriangle) {\n                    const linkColor = linksOptions.id !== undefined\n                        ? container.particles.linksColors.get(linksOptions.id)\n                        : container.particles.linksColor;\n                    colorTriangle = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorTriangle) {\n                    return;\n                }\n                drawLinkTriangle({\n                    context: ctx,\n                    pos1,\n                    pos2,\n                    pos3,\n                    backgroundMask: options.backgroundMask,\n                    colorTriangle,\n                    opacityTriangle,\n                });\n            });\n        };\n        this._drawTriangles = (options, p1, link, p1Links) => {\n            const p2 = link.destination;\n            if (!(options.links?.triangles.enable && p2.options.links?.triangles.enable)) {\n                return;\n            }\n            const vertices = p2.links?.filter((t) => {\n                const linkFreq = this._getLinkFrequency(p2, t.destination);\n                return (p2.options.links &&\n                    linkFreq <= p2.options.links.frequency &&\n                    p1Links.findIndex((l) => l.destination === t.destination) >= 0);\n            });\n            if (!vertices?.length) {\n                return;\n            }\n            for (const vertex of vertices) {\n                const p3 = vertex.destination, triangleFreq = this._getTriangleFrequency(p1, p2, p3);\n                if (triangleFreq > options.links.triangles.frequency) {\n                    continue;\n                }\n                this._drawLinkTriangle(p1, link, vertex);\n            }\n        };\n        this._getLinkFrequency = (p1, p2) => {\n            return setLinkFrequency([p1, p2], this._freqs.links);\n        };\n        this._getTriangleFrequency = (p1, p2, p3) => {\n            return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n        };\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        const { links, options } = particle;\n        if (!links || links.length <= 0) {\n            return;\n        }\n        const p1Links = links.filter((l) => options.links && this._getLinkFrequency(particle, l.destination) <= options.links.frequency);\n        for (const link of p1Links) {\n            this._drawTriangles(options, particle, link, p1Links);\n            if (link.opacity > 0 && (particle.retina.linksWidth ?? 0) > 0) {\n                this._drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this.container.retina.pixelRatio, { retina } = particle, { distance, width } = particle.options.links;\n        retina.linksDistance = distance * ratio;\n        retina.linksWidth = width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n}\n","import { LinkInstance } from \"./LinkInstance\";\nclass LinksPlugin {\n    constructor() {\n        this.id = \"links\";\n    }\n    getPlugin(container) {\n        return new LinkInstance(container);\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\nexport async function loadLinksPlugin(engine, refresh = true) {\n    const plugin = new LinksPlugin();\n    await engine.addPlugin(plugin, refresh);\n}\n","import { loadLinksInteraction } from \"./interaction\";\nimport { loadLinksPlugin } from \"./plugin\";\nexport async function loadParticlesLinksInteraction(engine, refresh = true) {\n    await loadLinksInteraction(engine, refresh);\n    await loadLinksPlugin(engine, refresh);\n}\nexport * from \"./Options/Classes/Links\";\nexport * from \"./Options/Classes/LinksShadow\";\nexport * from \"./Options/Classes/LinksTriangle\";\nexport * from \"./Options/Interfaces/ILinks\";\nexport * from \"./Options/Interfaces/ILinksShadow\";\nexport * from \"./Options/Interfaces/ILinksTriangle\";\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class PolygonDrawerBase {\n    draw(context, particle, radius) {\n        const start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius), sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides, interiorAngle = Math.PI - (Math.PI * interiorAngleDegrees) / 180;\n        if (!context) {\n            return;\n        }\n        context.beginPath();\n        context.translate(start.x, start.y);\n        context.moveTo(0, 0);\n        for (let i = 0; i < sideCount; i++) {\n            context.lineTo(side.length, 0);\n            context.translate(side.length, 0);\n            context.rotate(interiorAngle);\n        }\n    }\n    getSidesCount(particle) {\n        const polygon = particle.shapeData;\n        return Math.round(getRangeValue(polygon?.sides ?? polygon?.nb_sides ?? 5));\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class PolygonDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / 3.5),\n            y: -radius / (2.66 / 3.5),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * 2.66) / (sides / 3),\n        };\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class TriangleDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / 1.66,\n        };\n    }\n    getSidesCount() {\n        return 3;\n    }\n    getSidesData(particle, radius) {\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: radius * 2,\n        };\n    }\n}\n","import { PolygonDrawer } from \"./PolygonDrawer\";\nimport { TriangleDrawer } from \"./TriangleDrawer\";\nexport async function loadGenericPolygonShape(engine, refresh = true) {\n    await engine.addShape(\"polygon\", new PolygonDrawer(), refresh);\n}\nexport async function loadTriangleShape(engine, refresh = true) {\n    await engine.addShape(\"triangle\", new TriangleDrawer(), refresh);\n}\nexport async function loadPolygonShape(engine, refresh = true) {\n    await loadGenericPolygonShape(engine, refresh);\n    await loadTriangleShape(engine, refresh);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom, } from \"tsparticles-engine\";\nimport { RotateAnimation } from \"./RotateAnimation\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = \"clockwise\";\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { getRandom, getRangeValue, } from \"tsparticles-engine\";\nimport { Rotate } from \"./Options/Classes/Rotate\";\nfunction updateRotate(particle, delta) {\n    const rotate = particle.rotate, rotateOptions = particle.options.rotate;\n    if (!rotate || !rotateOptions) {\n        return;\n    }\n    const rotateAnimation = rotateOptions.animation, speed = (rotate.velocity ?? 0) * delta.factor, max = 2 * Math.PI, decay = rotate.decay ?? 1;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case \"increasing\":\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n    if (rotate.velocity && decay !== 1) {\n        rotate.velocity *= decay;\n    }\n}\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: (getRangeValue(rotateOptions.value) * Math.PI) / 180,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.rotate.status = \"increasing\";\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = 1 - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && rotate.animation.enable && !rotate.path;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source?.rotate);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRotate(particle, delta);\n        particle.rotation = particle.rotate?.value ?? 0;\n    }\n}\n","import { RotateUpdater } from \"./RotateUpdater\";\nexport async function loadRotateUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"rotate\", (container) => new RotateUpdater(container), refresh);\n}\n","const fixFactor = Math.sqrt(2);\nexport class SquareDrawer {\n    draw(context, particle, radius) {\n        const fixedRadius = radius / fixFactor, fixedDiameter = fixedRadius * 2;\n        context.rect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter);\n    }\n    getSidesCount() {\n        return 4;\n    }\n}\n","import { SquareDrawer } from \"./SquareDrawer\";\nexport async function loadSquareShape(engine, refresh = true) {\n    await engine.addShape([\"edge\", \"square\"], new SquareDrawer(), refresh);\n}\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class StarDrawer {\n    draw(context, particle, radius) {\n        const sides = particle.sides, inset = particle.starInset ?? 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n    getSidesCount(particle) {\n        const star = particle.shapeData;\n        return Math.round(getRangeValue(star?.sides ?? star?.nb_sides ?? 5));\n    }\n    particleInit(container, particle) {\n        const star = particle.shapeData, inset = getRangeValue(star?.inset ?? 2);\n        particle.starInset = inset;\n    }\n}\n","import { StarDrawer } from \"./StarDrawer\";\nexport async function loadStarShape(engine, refresh = true) {\n    await engine.addShape(\"star\", new StarDrawer(), refresh);\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateStrokeColor(particle, delta) {\n    if (!particle.strokeColor || !particle.strokeAnimation) {\n        return;\n    }\n    const { h, s, l } = particle.strokeColor, { h: hAnimation, s: sAnimation, l: lAnimation } = particle.strokeAnimation;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateStrokeColor } from \"./Utils\";\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, options = particle.options;\n        const stroke = itemFromSingleOrMultiple(options.stroke, particle.id, options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue(stroke.opacity ?? 1);\n        particle.strokeAnimation = stroke.color?.animation;\n        const strokeHslColor = rangeColorToHsl(stroke.color) ?? particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const color = particle.strokeAnimation, { strokeColor } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((strokeColor?.h.value !== undefined && strokeColor.h.enable) ||\n                (strokeColor?.s.value !== undefined && strokeColor.s.enable) ||\n                (strokeColor?.l.value !== undefined && strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateStrokeColor(particle, delta);\n    }\n}\n","import { StrokeColorUpdater } from \"./StrokeColorUpdater\";\nexport async function loadStrokeColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"strokeColor\", (container) => new StrokeColorUpdater(container), refresh);\n}\n","import { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont, } from \"tsparticles-engine\";\nexport const validTypes = [\"text\", \"character\", \"char\"];\nexport class TextDrawer {\n    draw(context, particle, radius, opacity) {\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        if (particle.text === undefined) {\n            particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n        }\n        const text = particle.text, style = character.style ?? \"\", weight = character.weight ?? \"400\", size = Math.round(radius) * 2, font = character.font ?? \"Verdana\", fill = particle.fill, offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (validTypes.find((t) => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes\n                .map((t) => options.particles.shape.options[t])\n                .find((t) => !!t), promises = [];\n            executeOnSingleOrMultiple(shapeOptions, (shape) => {\n                promises.push(loadFont(shape.font, shape.weight));\n            });\n            await Promise.all(promises);\n        }\n    }\n    particleInit(container, particle) {\n        if (!particle.shape || !validTypes.includes(particle.shape)) {\n            return;\n        }\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n    }\n}\n","import { TextDrawer, validTypes } from \"./TextDrawer\";\nexport async function loadTextShape(engine, refresh = true) {\n    await engine.addShape(validTypes, new TextDrawer(), refresh);\n}\n","import { initPjs } from \"tsparticles-particles.js\";\nimport { loadBasic } from \"tsparticles-basic\";\nimport { loadEasingQuadPlugin } from \"tsparticles-plugin-easing-quad\";\nimport { loadExternalAttractInteraction } from \"tsparticles-interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"tsparticles-interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"tsparticles-interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"tsparticles-interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"tsparticles-interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"tsparticles-interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"tsparticles-interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"tsparticles-interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"tsparticles-interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"tsparticles-interaction-external-slow\";\nimport { loadImageShape } from \"tsparticles-shape-image\";\nimport { loadLifeUpdater } from \"tsparticles-updater-life\";\nimport { loadLineShape } from \"tsparticles-shape-line\";\nimport { loadParallaxMover } from \"tsparticles-move-parallax\";\nimport { loadParticlesAttractInteraction } from \"tsparticles-interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"tsparticles-interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"tsparticles-interaction-particles-links\";\nimport { loadPolygonShape } from \"tsparticles-shape-polygon\";\nimport { loadRotateUpdater } from \"tsparticles-updater-rotate\";\nimport { loadSquareShape } from \"tsparticles-shape-square\";\nimport { loadStarShape } from \"tsparticles-shape-star\";\nimport { loadStrokeColorUpdater } from \"tsparticles-updater-stroke-color\";\nimport { loadTextShape } from \"tsparticles-shape-text\";\nexport async function loadSlim(engine, refresh = true) {\n    initPjs(engine);\n    await loadParallaxMover(engine, false);\n    await loadExternalAttractInteraction(engine, false);\n    await loadExternalBounceInteraction(engine, false);\n    await loadExternalBubbleInteraction(engine, false);\n    await loadExternalConnectInteraction(engine, false);\n    await loadExternalGrabInteraction(engine, false);\n    await loadExternalPauseInteraction(engine, false);\n    await loadExternalPushInteraction(engine, false);\n    await loadExternalRemoveInteraction(engine, false);\n    await loadExternalRepulseInteraction(engine, false);\n    await loadExternalSlowInteraction(engine, false);\n    await loadParticlesAttractInteraction(engine, false);\n    await loadParticlesCollisionsInteraction(engine, false);\n    await loadParticlesLinksInteraction(engine, false);\n    await loadEasingQuadPlugin();\n    await loadImageShape(engine, false);\n    await loadLineShape(engine, false);\n    await loadPolygonShape(engine, false);\n    await loadSquareShape(engine, false);\n    await loadStarShape(engine, false);\n    await loadTextShape(engine, false);\n    await loadLifeUpdater(engine, false);\n    await loadRotateUpdater(engine, false);\n    await loadStrokeColorUpdater(engine, false);\n    await loadBasic(engine, refresh);\n}\n"],"names":["isObject","val","deepCompare","obj1","obj2","excludeKeyFn","keys1","Object","keys","filter","key","keys2","length","value1","value2","Array","isArray","deepCompareArrays","arr1","arr2","i","val1","val2","defaultId","Particles","props","state","init","library","undefined","this","destroy","setState","nextProps","nextOptions","options","params","currentOptions","url","id","canvasClassName","className","height","width","style","loaded","startsWith","refresh","then","tsParticles","loadParticles","React","defaultProps","container","current","Component","Circle","x","y","radius","point","getDistance","position","range","pos1","pos2","distPos","Math","abs","r","sqrt","Rectangle","size","pow","Range","generatedAttribute","mouseDownEvent","mouseUpEvent","mouseLeaveEvent","mouseOutEvent","mouseMoveEvent","touchStartEvent","touchEndEvent","touchMoveEvent","touchCancelEvent","resizeEvent","visibilityChangeEvent","errorPrefix","w","h","pos","intersects","size2","w2","h2","Vector","xOrCoords","create","source","Vector3d","z","_updateFromAngle","angle","cos","sin","isNumber","coords3d","Error","atan2","getLengthSq","v","clone","sub","n","multTo","c","v3d","OptionsColor","value","data","color","load","isString","Random","enable","minimumValue","ValueWithRandom","random","isBoolean","setRangeValue","drawLine","context","begin","end","beginPath","moveTo","lineTo","closePath","drawTriangle","p1","p2","p3","paintBase","dimension","baseColor","fillStyle","fillRect","paintImage","image","opacity","globalAlpha","drawImage","clear","clearRect","drawParticle","particle","delta","colorStyles","backgroundMask","composite","shadow","transform","getPosition","rotation","pathRotation","velocity","rotateData","transformData","a","b","d","setTransform","globalCompositeOperation","shadowColor","shadowBlur","blur","getStyleFromRgb","shadowOffsetX","offset","shadowOffsetY","fill","strokeWidth","lineWidth","stroke","strokeStyle","shape","drawer","drawers","get","draw","retina","pixelRatio","drawShape","close","afterEffect","drawShapeAfterEffect","drawPlugin","plugin","drawParticlePlugin","alterHsl","type","s","l","randomColorValue","midColorValue","colorManagers","Map","addColorManager","manager","set","hue2rgb","p","q","t","stringToRgba","input","stringPrefix","parseString","hexFixed","replace","_","g","result","exec","parseInt","rangeColorToRgb","index","useIndex","colorToRgb","itemFromArray","res","handleRangeColor","getRandomRgbColor","stringToRgb","handleColor","rangeColorToHsl","rgb","rgbToHsl","r1","g1","b1","max","min","hslToRgb","hsl","hslPercent","floor","hslaToRgba","hsla","rgbResult","fixedMin","randomInRange","getStyleFromHsl","colorMix","color1","color2","size1","rgb1","rgb2","mix","getLinkColor","linkColor","sourceColor","getFillColor","getStrokeColor","destColor","getRadius","hslColor","getLinkRandomColor","optColor","blink","consent","getHslFromAnimation","animation","getHslAnimationFromHsl","animationOptions","reduceFactor","resColor","setColorAnimation","colorValue","colorAnimation","getRangeValue","speed","decay","status","loops","maxLoops","count","time","delayTime","delay","sync","getRandom","initialValue","_random","easings","addEasing","name","easing","getEasing","clamp","num","comp1","comp2","weight1","weight2","getRangeMax","getRangeMin","getValue","getDistances","pointA","pointB","dx","dy","distance","getParticleDirectionAngle","direction","center","PI","getParticleBaseVelocity","baseVelocity","collisionVelocity","v1","v2","m1","m2","calcExactPositionOrRandomFromSize","parseAlpha","endsWith","parseFloat","_logger","debug","console","error","info","log","verbose","warning","warn","getLogger","rectSideBounce","bounced","pSide","pOtherSide","rectSide","rectOtherSide","factor","isSsr","window","document","safeMatchMedia","query","matchMedia","safeMutationObserver","callback","MutationObserver","isInArray","array","indexOf","loadFont","font","weight","fonts","arrayRandomIndex","isPointInside","bounds","inside","top","right","left","bottom","areBoundsInside","calculateBounds","deepExtend","destination","sources","sourceIsArray","destDict","map","isDivModeEnabled","mode","divs","findItemFromSingleOrMultiple","divModeExecute","executeOnSingleOrMultiple","div","divMode","selectors","selector","singleDivModeExecute","element","matches","some","checkSelector","circleBounceDataFromParticle","mass","getMass","bounce","horizontal","vertical","circleBounce","xVelocityDiff","yVelocityDiff","xDist","yDist","u1","rotate","u2","vFinal1","vFinal2","rectBounce","divBounds","resH","resV","obj","item","itemFromSingleOrMultiple","find","initParticleNumericAnimationValue","pxRatio","valueRange","autoStatus","startValue","getPositionOrSize","positionOrSize","canvasSize","arg","isFunction","setTransformValue","newFactor","newValue","Canvas","_applyPostDrawUpdaters","_postDrawUpdaters","updater","afterDraw","_applyPreDrawUpdaters","ctx","zOpacity","_preDrawUpdaters","getColorStyles","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","_resizePlugins","resize","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","particleStrokeColor","_initCover","cover","actualOptions","coverRgb","coverColor","_coverColorStyle","_initStyle","_fullScreen","_originalStyle","_setFullScreenStyle","_resetOriginalStyle","setProperty","_initTrail","trail","particles","move","trailFill","fillColor","_trailFill","Promise","resolve","reject","img","createElement","addEventListener","evt","src","_paintBase","_paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","observe","attributes","originalStyle","zIndex","_mutationObserver","priority","fullScreen","toString","_context","_generated","paint","stop","remove","cb","spawning","destroyed","pfColor","psColor","zIndexOptions","zOpacityFactor","zIndexFactor","opacityRate","bubble","zStrokeOpacity","strokeOpacity","sizeRate","obs","records","record","attributeName","initUpdaters","initPlugins","background","elementStyle","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","plugins","push","updaters","canvas","dataset","ariaHidden","offsetHeight","offsetWidth","getContext","newSize","oldSize","started","resizeFactor","needsRefresh","updateActualOptions","setDensity","manageListener","event","handler","add","addOptions","passive","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","e","_canPush","mouseInteractivity","interactivity","mouse","mousePos","clickPosition","clickTime","Date","getTime","onClick","events","handleClickMode","setTimeout","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","dark","light","theme","themes","default","auto","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","pageHidden","pause","getAnimationStatus","play","_handleWindowResize","_resizeTimeout","clearTimeout","windowResize","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","onHover","mouseMove","touchStart","touchMove","touchEndClick","mouseUp","mouseDown","touchEnd","mouseLeave","touchCancel","_manageListeners","detectType","detectsOn","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChange","mediaMatch","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","_resizeObserver","unobserve","entries","target","_mouseDown","clicking","downPosition","_mouseTouchClick","handled","mousePosition","clickPositionValid","_mouseTouchMove","mouseEvent","clientRect","getBoundingClientRect","clientX","clientY","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","touchEvent","lastTouch","touches","_touchEnd","from","changedTouches","touch","_touches","delete","identifier","_touchEndClick","_touchStart","performance","now","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivEvent","elementId","ids","el","Parallax","force","smooth","HoverEvent","parallax","ResizeEvent","Events","onDiv","onclick","ondiv","tmp","onhover","Modes","engine","_engine","_container","interactors","interactor","loadModeOptions","Interactivity","modes","detect_on","ManualParticle","Responsive","maxWidth","Infinity","ThemeDefault","Theme","ColorAnimation","HslAnimation","AnimatableColor","CollisionsAbsorb","CollisionsOverlap","retries","ParticlesBounceFactor","ParticlesBounce","Collisions","absorb","maxSpeed","overlap","MoveAngle","MoveAttract","rotateX","rotateY","MoveCenter","MoveGravity","acceleration","inverse","MovePath","generator","MoveTrailFill","MoveTrail","OutModes","Spin","Move","attract","drift","gravity","path","outModes","spin","straight","vibrate","warp","collisions","outMode","out_mode","noise","RangedAnimationOptions","OpacityAnimation","opacity_min","Opacity","anim","ParticlesDensity","area","value_area","ParticlesNumber","density","limit","Shadow","charKey","charAltKey","imageKey","imageAltKey","polygonKey","polygonAltKey","Shape","loadShape","mainKey","altKey","altOverride","itemIsArray","emptyValue","mainDifferentValues","altDifferentValues","_value","custom","character","polygon","images","SizeAnimation","size_min","Size","Stroke","ZIndex","velocityRate","ParticlesOptions","groups","number","reduceDuplicates","group","strokeToLoad","loadOptions","loadParticlesOptions","sourceOptionsArr","sourceOptions","Options","_findDefaultTheme","_importPreset","preset","getPreset","autoPlay","detectRetina","duration","fpsLimit","manualParticles","pauseOnOutsideViewport","responsive","zLayers","retina_detect","fps_limit","backgroundMode","optResponsive","sort","existingTheme","optTheme","defaultOptions","responsiveOptions","screen","availWidth","chosenTheme","clientDarkMode","defaultTheme","InteractionManager","_interactors","getInteractors","_externalInteractors","_particleInteractors","isEnabled","interact","reset","fixOutMode","checkModes","diameter","coord","maxCoord","setCb","Particle","overrideOptions","_calcPosition","tryCount","pluginPos","particlePosition","exactPosition","fixHorizontal","fixVertical","_checkOverlap","_calculateVelocity","copy","moveOptions","rad","radOffset","collisionsOptions","overlapOptions","_getRollColor","roll","backColor","alter","backFactor","backSum","_initPosition","zIndexValue","initialPosition","moveCenter","outType","_loadShapeData","shapeOptions","shapeData","override","unbreakable","inRange","slow","pathGenerator","particleDestroyed","strokeColor","lastPathTime","misplaced","maxDistance","ignoresResizeRatio","mainOptions","particlesOptions","shapeType","overrideShapeType","pathOptions","pathDelay","getPathGenerator","addPath","initParticle","initialVelocity","moveDecay","needsSort","lastZIndex","sides","getShapeDrawer","sideCountFunc","getSidesCount","movers","mover","particleInit","particleCreated","isInsideCanvas","Point","QuadTree","rectangle","capacity","_subdivide","_subs","round","_divided","_points","contains","insert","check","found","qTreeRectangle","_applyDensity","manualCount","numberOptions","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","removeQuantity","densityOptions","_pushParticle","initializer","pool","pop","_nextId","canAdd","_array","_zArray","dispatchEvent","_removeParticle","zIdx","splice","_interactionManager","quadTree","getMovers","getUpdaters","addParticle","countToRemove","update","condition","particlesInitialization","pathGenerators","addManualParticles","groupOptions","j","nb","pushing","removeAt","quantity","deleted","particlesToDelete","Set","particleUpdate","checkDelete","has","externalInteract","particlesInteract","zArray","Retina","devicePixelRatio","ratio","attractDistance","sizeAnimationSpeed","moveDistance","moveDrift","moveSpeed","guardCheck","initDelta","loadContainerOptions","defaultPathGenerator","generate","Container","_intersectionManager","entry","isIntersecting","_nextFrame","timestamp","lastFrameTime","addLifeTime","alive","_delay","_duration","_lifeTime","_firstStart","_paused","_sourceOptions","_initialSourceOptions","_options","_eventListeners","IntersectionObserver","_intersectionObserver","clickOrTouchHandler","posRetina","queryCircle","touched","touchMoved","radiusX","radiusY","mainArr","dom","idx","findIndex","refreshTime","_drawAnimationFrame","requestAnimationFrame","export","supported","blob","shapes","getSupportedShapes","availablePlugins","getAvailablePlugins","particlesSetup","_currentTheme","cancelAnimationFrame","needsUpdate","start","noiseOrGenerator","setPath","pathOrGenerator","oldGenerator","_delayTimeout","addListeners","HTMLElement","removeListeners","newMaxWidth","setResponsive","setTheme","responsiveMaxWidth","EventDispatcher","_listeners","listener","arr","args","listeners","forEach","getItemsFromInitializer","initializers","values","Plugins","_initializers","presets","initInteractor","initMover","initUpdater","getPlugin","presetKey","types","needsPlugin","getDataFromUrl","fallback","fetch","response","ok","json","isParams","Engine","_configs","_domArray","_eventDispatcher","_initialized","config","nameOrConfig","interactorInitializer","addInteractor","moverInitializer","addParticleMover","updaterInitializer","addParticleUpdater","addPathGenerator","addPlugin","addPreset","initOrRefresh","afterEffectOrRefresh","destroyOrRefresh","realRefresh","realInit","realAfterEffect","realDestroy","customDrawer","addShapeDrawer","tagIdOrOptionsOrParams","loadFromArray","optionsOrIndex","_loadParams","tagId","pathConfigJson","addClickHandler","domContainer","getElementById","body","append","oldIndex","old","domItem","tagName","toLowerCase","existingCanvases","getElementsByTagName","appendChild","newItem","loadCanvas","HslColorManager","RgbColorManager","rgbColor","rgbColorManager","hslColorManager","querySelector","links","minDistance","connectParticles","maxParticles","sizeVariations","breakpoint","initPjs","particlesJS","loadJSON","catch","setOnClickHandler","pJSDom","initParticlesJS","addTo","applyPath","gravityOptions","gravityFactor","mult","zVelocityFactor","BaseMover","_initSpin","spinOptions","spinPos","spinCenter","spinAcceleration","particleOptions","slowFactor","getProximitySpeedFactor","baseSpeed","maxSize","updateFunc","maxCanvasSize","dxFixed","dyFixed","hDistance","vDistance","vel","applyDistance","loadBaseMover","addMover","CircleDrawer","circleRange","arc","loadCircleShape","addShape","updateColorValue","valueAnimation","decrease","ColorUpdater","hAnimation","sAnimation","lAnimation","updateColor","loadColorUpdater","OpacityUpdater","opacityOptions","opacityAnimation","minValue","maxValue","checkDestroy","updateOpacity","loadOpacityUpdater","BounceOutMode","includes","particleBounce","newVelocity","minPos","bounceHorizontal","bounceVertical","DestroyOutMode","_delta","vx","vy","NoneOutMode","pRadius","OutOutMode","circVec","newDx","newDy","wrap","newPos","sizeValue","nextBounds","OutOfCanvasUpdater","_updateOutMode","loadOutModesUpdater","SizeUpdater","sizeAnimation","sizeVelocity","updateSize","loadSizeUpdater","loadBasic","loadEasingQuadPlugin","ExternalInteractorBase","Attract","Attractor","_clickAttract","finish","attractRadius","attractModeDistance","_processAttract","_hoverAttract","attractOptions","attractFactor","normVec","subFrom","setTo","mouseMoveStatus","hoverEnabled","hoverMode","clickEnabled","clickMode","loadExternalAttractInteraction","Bounce","Bouncer","_processBounce","_processMouseBounce","tolerance","bounceModeDistance","_singleSelectorBounce","querySelectorAll","elem","offsetLeft","offsetTop","loadExternalBounceInteraction","BubbleBase","BubbleDiv","Bubble","calculateBubbleValue","particleValue","modeValue","optionsValue","Bubbler","_clickBubble","mouseClickPos","bubbleOptions","bubbleModeDistance","durationEnd","distMouse","timeSpent","sizeData","bubbleObj","optValue","bubbleModeSize","particlesObj","_process","opacityData","_hoverBubbleColor","_hoverBubble","pointDistance","_hoverBubbleSize","_hoverBubbleOpacity","divBubble","finalColor","modeColor","bubbleColor","pColor","modeOpacity","optOpacity","modeSize","optSize","bubbleParam","bubbleDuration","bubbleDistance","particlesParam","pObjBubble","pObj","_singleSelectorHover","repulseRadius","loadExternalBubbleInteraction","ConnectLinks","Connect","lineLinked","line_linked","lineStyle","connectOptions","connect","gradStop","sourcePos","destPos","midRgb","grad","createLinearGradient","addColorStop","gradient","drawConnection","ls","drawConnectLine","linksWidth","Connector","connectModeDistance","connectModeRadius","slice","distMax","xDiff","yDiff","loadExternalConnectInteraction","GrabLinks","Grab","drawGrab","lineColor","beginPos","colorLine","drawGrabLine","Grabber","grab","grabModeDistance","grabLineOptions","lineOpacity","opacityLine","grabLineColor","linksOptions","loadExternalGrabInteraction","Pauser","loadExternalPauseInteraction","Push","particles_nb","Pusher","pushOptions","loadExternalPushInteraction","Remove","Remover","removeNb","loadExternalRemoveInteraction","RepulseBase","RepulseDiv","Repulse","Repulser","_clickRepulse","repulseOptions","repulse","repulseDistance","repulseModeDistance","vect","_hoverRepulse","_processRepulse","divRepulse","repulseFactor","_singleSelectorRepulse","repulseOpts","hover","click","loadExternalRepulseInteraction","Slow","Slower","slowModeRadius","slowOptions","particlePos","dist","proximityFactor","loadExternalSlowInteraction","InterlaceOffsets","InterlaceSteps","ByteStream","bytes","Uint8ClampedArray","reduce","acc","curr","String","fromCharCode","blockString","len","blockData","Uint8Array","parseColorTable","byteStream","colors","parseExtensionBlock","gif","getFrameIndex","getTransparencyIndex","nextByte","frame","frames","packedByte","GCreserved","disposalMethod","userInputDelayFlag","transparencyFlag","nextTwoBytes","transparencyIndex","applicationExtension","getString","authenticationCode","readSubBlocksBin","applicationExtensions","comments","readSubBlocks","globalColorTable","EvalError","plainTextData","charSize","foregroundColor","text","skipSubBlocks","parseImageBlock","avgAlpha","progressCallback","localColorTableFlag","interlacedFlag","sortFlag","reserved","localColorCount","localColorTable","getColor","ImageData","colorSpace","DOMException","minCodeSize","imageData","clearCode","readBits","bytePos","bitPos","code","dic","pass","pixelPos","lineIndex","last","concat","createImageBitmap","bitmap","parseBlock","getGIFLoopAmount","extension","NaN","decodeGIF","gifURL","arrayBuffer","buffer","totalTime","colorRes","pixelAspectRatio","globalColorTableFlag","globalColorCount","backgroundColorIndex","copyWithin","frameIndex","incrementFrameIndex","getframeIndex","increment","message","currentColorRegex","loadImage","loading","Image","loadGifImage","gifData","gifLoopCount","downloadSvgImage","svgData","replaceImageColor","svgColoredData","imageShape","colorStyle","preFillIndex","substring","replaceColorSvg","imageRes","replaceColor","replace_color","svg","Blob","domUrl","URL","webkitURL","createObjectURL","revokeObjectURL","img2","ImageDrawer","loadImageShape","offscreenCanvas","OffscreenCanvas","offscreenContext","imageSmoothingQuality","imageSmoothingEnabled","gifFrame","gifTime","scale","putImageData","previousImageData","getImageData","preload","Preload","ImagePreloaderPlugin","preloadOptions","existing","addLoadImageToEngine","imageFunc","preloader","LifeDelay","LifeDuration","Life","LifeUpdater","lifeOptions","life","justSpawned","widthRange","heightRange","loadLifeUpdater","LineDrawer","lineCap","cap","loadLineShape","ParallaxMover","parallaxOptions","parallaxForce","canvasCenter","parallaxSmooth","centerDistance","loadParallaxMover","ParticlesInteractorBase","ax","ay","p1Factor","p2Factor","loadParticlesAttractInteraction","updateAbsorb","r2","fixBounceSpeed","collisionMaxSpeed","resolveCollision","Collider","radius1","radius2","loadParticlesCollisionsInteraction","CircleWarp","rect","circle","biggerCircle","rectSW","LinksShadow","LinksTriangle","frequency","Links","triangles","getLinkDistance","optDistance","absDiffs","warpDistances","Linker","_setColor","linkContainer","linksColor","linksColors","linkOpt1","linksDistance","linkOpt2","loadLinksInteraction","setLinkFrequency","dictionary","join","LinkInstance","_drawLinkLine","link","p1LinksOptions","twinkle","lines","twinkleFreq","twinkleRgb","drawn","pi1","pi2","endNE","d1","yi","endSW","d2","xi","endSE","d3","drawLinkLine","_drawLinkTriangle","link1","link2","triangleOptions","opacityTriangle","pos3","colorTriangle","drawLinkTriangle","_drawTriangles","p1Links","vertices","linkFreq","_getLinkFrequency","vertex","_getTriangleFrequency","_freqs","LinksPlugin","loadLinksPlugin","loadParticlesLinksInteraction","PolygonDrawerBase","getCenter","side","getSidesData","sideCount","numerator","denominator","decimalSides","interiorAngleDegrees","interiorAngle","translate","nb_sides","PolygonDrawer","TriangleDrawer","loadGenericPolygonShape","loadTriangleShape","loadPolygonShape","RotateAnimation","Rotate","RotateUpdater","rotateOptions","rotateDirection","rotateAnimation","updateRotate","loadRotateUpdater","fixFactor","SquareDrawer","fixedRadius","fixedDiameter","loadSquareShape","StarDrawer","inset","starInset","star","loadStarShape","StrokeColorUpdater","strokeAnimation","strokeHslColor","updateStrokeColor","loadStrokeColorUpdater","validTypes","TextDrawer","textData","randomIndexData","fillText","strokeText","promises","all","loadTextShape","loadSlim"],"sourceRoot":""}