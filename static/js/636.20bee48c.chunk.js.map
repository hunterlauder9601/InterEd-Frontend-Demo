{"version":3,"file":"static/js/636.20bee48c.chunk.js","mappings":"2LAEMA,EAAa,WACjB,IAAMC,EAAU,SAACC,GACfC,OAAOC,OAAOC,SAASC,UAAUJ,EAAU,KAC7C,EAsDA,OACE,iBAAKK,UAAU,wBAAuB,WAC9B,gBAAKA,UAAU,OAAM,UACnB,eAAIA,UAAU,wEAAuE,SAAC,sBAExF,iBAAKA,UAAU,gBAAe,WAC5B,eAAIA,UAAU,oBAAmB,SAAC,eAGlC,iBAAKA,UAAU,YAAW,UAAC,gCACG,0BAAM,WAAa,qCAC/C,gBAAKA,UAAU,cAAa,UAAC,0BAAM,cACnC,mBAAQA,UAAU,gBAAgBC,QAhE7B,WACjBL,OAAOC,OAAOC,SAASI,SAAS,4BAClC,EA8DoE,SAAC,uBACvD,mBAAQF,UAAU,gBAAgBC,QA7D7B,WACjBP,EAAQ,qBACRA,EAAQ,yBACV,EA0DoE,SAAC,sBACvD,mBAAQM,UAAU,gBAAgBC,QAzD7B,WACjBP,EAAQ,SACV,EAuDoE,UAAC,0BAAM,0BAKjE,eAAIM,UAAU,wCAEd,iBAAKA,UAAU,gBAAe,WAC5B,eAAIA,UAAU,oBAAmB,SAAC,eAGlC,iBAAKA,UAAU,YAAW,WACxB,0BAAM,WAAa,kFACnB,gBAAKA,UAAU,cAAa,UAAC,0BAAM,4CACnC,mBAAQA,UAAU,gBAAgBC,QAnE7B,WACjBL,OAAOC,OAAOC,SAASI,SAAS,2BAClC,EAiEoE,SAAC,uBACvD,mBAAQF,UAAU,gBAAgBC,QAhE7B,WACjBP,EAAQ,qBACRA,EAAQ,wBACV,EA6DoE,SAAC,sBACvD,mBAAQM,UAAU,gBAAgBC,QA5D7B,WACjBP,EAAQ,SACV,EA0DoE,SAAC,wBAI3D,eAAIM,UAAU,wCAEd,iBAAKA,UAAU,gBAAe,WAC5B,eAAIA,UAAU,oBAAmB,SAAC,eAGlC,iBAAKA,UAAU,YAAW,WACxB,0BAAM,WAAa,kGACnB,gBAAKA,UAAU,cAAa,UAAC,0BAAM,qBACnC,mBAAQA,UAAU,gBAAgBC,QArE7B,WACjBL,OAAOC,OAAOC,SAASI,SAAS,2BAClC,EAmEoE,UAAC,0BAAM,yBAC7D,mBAAQF,UAAU,gBAAgBC,QAlE7B,WACjBP,EAAQ,qBACRA,EAAQ,wBACV,EA+DoE,UAAC,0BAAM,wBAC7D,mBAAQM,UAAU,gBAAgBC,QA9D7B,WACjBP,EAAQ,SACV,EA4DoE,UAAC,0BAAM,0BAIjE,eAAIM,UAAU,wCAEd,iBAAKA,UAAU,gBAAe,WAC5B,eAAIA,UAAU,oBAAmB,SAAC,sBAGlC,iBAAKA,UAAU,YAAW,UAAC,sBAEzB,gBAAKA,UAAU,cAAa,UAAC,0BAAM,0BAAmC,uBAEtE,gBAAKA,UAAU,cAAa,UAAC,0BAAM,4BACnC,mBAAQA,UAAU,gBAAgBC,QAzE5B,WAClBL,OAAOC,OAAOC,SAASI,SAAS,sBAClC,EAuEqE,UAAC,0BAAM,yBAC9D,mBAAQF,UAAU,gBAAgBC,QAtE5B,WAClBP,EAAQ,qBACRA,EAAQ,iBACV,EAmEqE,UAAC,0BAAM,wBAC9D,mBAAQM,UAAU,gBAAgBC,QAlE5B,WAClBP,EAAQ,OACV,EAgEqE,UAAC,0BAAM,2BAK9E,C","sources":["contexts/OS1Context.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst OS1Context = () => {\r\n  const runCode = (command) => {\r\n    window.parent.terminal.sendInput(command + '\\n');\r\n  };\r\n\r\n  const animation1 = () => {\r\n    window.parent.terminal.openFile('/home/example1/fork_ex1.c');\r\n  };\r\n\r\n  const animation2 = () => {\r\n    runCode(\"cd /home/example1\");\r\n    runCode(\"gcc -o fork fork_ex1.c\");\r\n  };\r\n\r\n  const animation3 = () => {\r\n    runCode(\"./fork\");\r\n  };\r\n\r\n  const animation4 = () => {\r\n    window.parent.terminal.openFile('/home/example1/exec_ex.c');\r\n  };\r\n\r\n  const animation5 = () => {\r\n    runCode(\"cd /home/example1\");\r\n    runCode(\"gcc -o exec exec_ex.c\");\r\n  };\r\n\r\n  const animation6 = () => {\r\n    runCode(\"./exec\");\r\n  };\r\n\r\n  const animation7 = () => {\r\n    window.parent.terminal.openFile('/home/example1/wait_ex.c');\r\n  };\r\n\r\n  const animation8 = () => {\r\n    runCode(\"cd /home/example1\");\r\n    runCode(\"gcc -o wait wait_ex.c\");\r\n  };\r\n\r\n  const animation9 = () => {\r\n    runCode(\"./wait\");\r\n  };\r\n\r\n  const animation10 = () => {\r\n    window.parent.terminal.openFile('/home/example1/p4.c');\r\n  };\r\n\r\n  const animation11 = () => {\r\n    runCode(\"cd /home/example1\");\r\n    runCode(\"gcc -o wc p4.c\");\r\n  };\r\n\r\n  const animation12 = () => {\r\n    runCode(\"./wc\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full h-full text-lg\">\r\n            <div className='mb-2'>\r\n              <h1 className='text-2xl font-bold border-b-4 border-purple-400 tracking-wider inline'>1. Process API</h1>\r\n            </div>\r\n            <div className='flex flex-col'>\r\n              <h2 className='text-xl font-bold'>\r\n                1.1. Fork\r\n              </h2>\r\n              <div className='mt-1 ml-2'>\r\n                UNIX systems always use the <code>fork()</code> system call to create a process. \r\n                <div className=\"lesson_high\"><code>fork()</code></div>\r\n                <button className=\"lesson_button\" onClick={animation1}>Go to the example</button>\r\n                <button className=\"lesson_button\" onClick={animation2}>Compile the code</button>\r\n                <button className=\"lesson_button\" onClick={animation3}><span>Run the code</span></button>\r\n              </div>\r\n          </div>\r\n\r\n\r\n            <hr className='w-full border my-4 border-gray-300'/>\r\n\r\n            <div className='flex flex-col'>\r\n              <h2 className='text-xl font-bold'>\r\n                1.2. Exec\r\n              </h2>\r\n              <div className='mt-1 ml-2'>\r\n                <code>exec()</code> replaces current process image (i.e., memory content) with new program image.\r\n                <div className=\"lesson_high\"><code>exec(\"binary path\", arg1, arg2, ...)</code></div>\r\n                <button className=\"lesson_button\" onClick={animation4}>Go to the example</button>\r\n                <button className=\"lesson_button\" onClick={animation5}>Compile the code</button>\r\n                <button className=\"lesson_button\" onClick={animation6}>Run the code</button>\r\n              </div>\r\n            </div>\r\n\r\n            <hr className='w-full border my-4 border-gray-300'/>\r\n\r\n            <div className='flex flex-col'>\r\n              <h2 className='text-xl font-bold'>\r\n                1.3. Wait\r\n              </h2>\r\n              <div className='mt-1 ml-2'>\r\n                <code>wait()</code> helps the parent process  to know when a child completes to check the return status of child.\r\n                <div className=\"lesson_high\"><code>wait(&status)</code></div>\r\n                <button className=\"lesson_button\" onClick={animation7}><span>Go to the example</span></button>\r\n                <button className=\"lesson_button\" onClick={animation8}><span>Compile the code</span></button>\r\n                <button className=\"lesson_button\" onClick={animation9}><span>Run the code</span></button>\r\n              </div>\r\n            </div>\r\n\r\n            <hr className='w-full border my-4 border-gray-300'/>\r\n\r\n            <div className='flex flex-col'>\r\n              <h2 className='text-xl font-bold'>\r\n                1.4. Redirection\r\n              </h2>\r\n              <div className='mt-1 ml-2'>\r\n                Input Redirection:\r\n                <div className=\"lesson_high\"><code>command &lt; input.txt</code></div>\r\n                Output Redirection:\r\n                <div className=\"lesson_high\"><code>command &gt; output.txt</code></div>\r\n                <button className=\"lesson_button\" onClick={animation10}><span>Go to the example</span></button>\r\n                <button className=\"lesson_button\" onClick={animation11}><span>Compile the code</span></button>\r\n                <button className=\"lesson_button\" onClick={animation12}><span>Run the code</span></button>\r\n              </div>\r\n            </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { OS1Context as default}"],"names":["OS1Context","runCode","command","window","parent","terminal","sendInput","className","onClick","openFile"],"sourceRoot":""}