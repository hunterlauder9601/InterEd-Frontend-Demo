{"version":3,"file":"static/js/961.f716ee64.chunk.js","mappings":"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","sources":["data.js","Course.jsx","Courses.jsx"],"sourcesContent":["import docker from './images/docker-icon.svg'\r\nimport os from './images/command_line.svg'\r\nimport python from './images/python.svg'\r\nimport linux from './images/linux-tux.svg'\r\nimport rust from './images/rust.svg'\r\nimport Kubernetes from './images/kubernetes.svg'\r\nimport ml from './images/ai.svg'\r\nimport go from './images/go.svg'\r\n\r\nexport const data=[\r\n    {\r\n        id:1,\r\n        name:\"Operating Systems\",\r\n        image: os,\r\n        page: 'OS',\r\n        active: true\r\n    },\r\n    {    \r\n        id:2,\r\n        name:\"Python\",\r\n        image: python,\r\n        page: 'Python',\r\n        active: true\r\n    },\r\n    {\r\n        id:3,\r\n        name:\"Linux\",\r\n        image:linux,\r\n        page: 'Linux',\r\n        active: true\r\n    },\r\n    {\r\n        id:4,\r\n        name:\"Docker\",\r\n        image:docker,\r\n        page: 'Docker',\r\n        active: true\r\n    },\r\n    {\r\n        id:5,\r\n        name:\"Rust\",\r\n        image:rust,\r\n        page: 'Rust',\r\n        active: true\r\n    },\r\n    {\r\n        id:6,\r\n        name:\"Kubernetes\",\r\n        image:Kubernetes,\r\n        page: 'Kubernetes',\r\n        active: true\r\n    },\r\n    {\r\n        id:7,\r\n        name:\"Machine Learning\",\r\n        image:ml,\r\n        page: 'ML',\r\n        active: true\r\n    },\r\n    {\r\n        id:8,\r\n        name:\"Go\",\r\n        image:go,\r\n        page: 'Go',\r\n        active: true\r\n    },\r\n\r\n]","import React from 'react';\r\n\r\nconst Course = ({ name, img, active }) => {\r\n  return (\r\n    <div className={`w-full h-full bg-gray-100 hover:scale-105 duration-300 ease-in shadow-2xl shadow-gray-400 group \r\n    cursor-pointer rounded-2xl flex flex-col justify-center ${active ? 'cursor-pointer' : 'cursor-not-allowed'}`}>\r\n      <div className=' h-1/3 aspect-square m-6 rounded-lg overflow-hidden'>\r\n        <div className='bg-contain bg-center bg-no-repeat h-full'\r\n          style={{ backgroundImage: `url(${img})` }}>\r\n        </div>\r\n      </div>\r\n      <hr className='border-gray-300 mb-6' />\r\n      <div className='mx-2 text-black'>\r\n        <p className='text-xl font-bold text-center'>{name}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Course as default}","import { useState, useEffect  } from 'react'\r\nimport { data } from './data';\r\nimport Course from './Course';\r\nimport { auth, db } from './firebase';\r\nimport { doc, getDoc, setDoc } from 'firebase/firestore';\r\nimport { Link } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Courses = () => {\r\n  const navigate = useNavigate();\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [bookmarkedOnly, setBookmarkedOnly] = useState(\r\n    localStorage.getItem('bookmarkedOnly') === 'true'\r\n  );\r\n  const [userFavorites, setUserFavorites] = useState({});\r\n  const [courses, setCourses] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\r\n      if (!user) {\r\n        navigate('/login');\r\n      } else {\r\n        const localStorageFavs = localStorage.getItem(`${user.uid}-favoriteCourses`);\r\n\r\n        if (localStorageFavs) {\r\n          const favoriteCourses = JSON.parse(localStorageFavs);\r\n          setUserFavorites(favoriteCourses);\r\n          console.log('cached favorite courses read')\r\n        } else {\r\n          const userDocRef = doc(db, 'users', user.uid, 'courses', 'bookmarks');\r\n          const userDocSnapshot = await getDoc(userDocRef);\r\n          if (userDocSnapshot.exists()) {\r\n            const favoriteCourses = userDocSnapshot.data();\r\n            setUserFavorites(favoriteCourses);\r\n          } else {\r\n            const initialStatus = {};\r\n            data.forEach((course, index) => {\r\n              initialStatus[course.page] = false;\r\n            });\r\n            await setDoc(userDocRef, initialStatus);\r\n            setUserFavorites(initialStatus);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    // Filter the courses based on the search query and bookmarkedOnly state\r\n    const filteredCourses = data.filter((course) => {\r\n      const isInSearch = course.name.toLowerCase().includes(searchQuery.toLowerCase());\r\n      const isBookmarked = userFavorites && userFavorites[course.page];\r\n      return (!bookmarkedOnly || (bookmarkedOnly && isBookmarked)) && isInSearch;\r\n    });\r\n\r\n    setCourses(filteredCourses);\r\n  }, [searchQuery, bookmarkedOnly, userFavorites]);\r\n\r\n  useEffect(() => {\r\n    // Save the bookmarkedOnly setting in localStorage\r\n    localStorage.setItem('bookmarkedOnly', bookmarkedOnly);\r\n  }, [bookmarkedOnly]);\r\n\r\n  const coursesArr = courses.map((course) => (\r\n    course.active ?\r\n      <Link \r\n        to={`${course.page}`} key={course.id}>\r\n        <Course\r\n          key={course.id}\r\n          name={course.name}\r\n          img={course.image}\r\n          active={course.active}\r\n        />\r\n      </Link>\r\n    :\r\n      <Course\r\n        key={course.id}\r\n        name={course.name}\r\n        img={course.image}\r\n        active={course.active}\r\n      />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"w-auto min-h-[calc(100vh-65px)] max-h-fit bg-gray-100 text-black flex items-center overflow-hidden\">\r\n      {/* Courses */}\r\n      <div className={'w-full max-w-6xl px-4 py-[5vh] mx-auto flex flex-col'}>\r\n        <div className=\"mb-8\">\r\n          <h1 className=\"text-4xl font-bold border-b-4 border-purple-400 tracking-wider inline pb-1\">\r\n            Courses\r\n          </h1>\r\n        </div>\r\n        <div className=\"w-full flex flex-col items-start\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search Courses...\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n            className=\"bg-gray-200 text-black text-lg w-full px-4 py-2 rounded-xl\"\r\n          />\r\n          <button\r\n            onClick={() => setBookmarkedOnly(!bookmarkedOnly)}\r\n            className={`${\r\n              bookmarkedOnly ? 'bg-gray-500 text-white' : 'bg-gray-300/50 text-black hover:bg-gray-400/50'\r\n            } px-4 py-1 rounded-xl duration-200 ease-linear text-lg font-bold mt-2`}\r\n          >\r\n          Show Bookmarked Courses Only\r\n          </button>\r\n        </div>\r\n        <div className=\"w-full flex items-center justify-center\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-10 mt-4 w-full\r\n           mx-[10vw] md:mx-[3vw]\">\r\n            {coursesArr}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport { Courses as default}"],"names":["data","id","name","image","os","page","active","python","linux","docker","rust","Kubernetes","ml","go","Course","img","className","style","backgroundImage","Courses","navigate","useNavigate","useState","searchQuery","setSearchQuery","localStorage","getItem","bookmarkedOnly","setBookmarkedOnly","userFavorites","setUserFavorites","courses","setCourses","useEffect","unsubscribe","auth","user","localStorageFavs","uid","favoriteCourses","JSON","parse","console","log","userDocRef","doc","db","getDoc","userDocSnapshot","exists","initialStatus","forEach","course","index","setDoc","filteredCourses","filter","isInSearch","toLowerCase","includes","isBookmarked","setItem","coursesArr","map","to","type","placeholder","value","onChange","e","target","onClick"],"sourceRoot":""}