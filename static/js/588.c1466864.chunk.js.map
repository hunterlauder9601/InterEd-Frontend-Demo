{"version":3,"file":"static/js/588.c1466864.chunk.js","mappings":"wPAKMA,EAAW,SAAH,GAA+B,IAAxBC,EAAe,EAAfA,gBACbC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KACtB,GAAgCF,EAAAA,EAAAA,UAAS,IAAG,eAArCG,EAAQ,KAAEC,EAAW,KAC5B,GAA8CJ,EAAAA,EAAAA,UAAS,IAAG,eAAnDK,EAAe,KAAEC,EAAkB,KAC1C,GAAgCN,EAAAA,EAAAA,UAAS,IAAG,eAArCO,EAAQ,KAAEC,EAAW,KAC5B,GAA0BR,EAAAA,EAAAA,UAAS,IAAG,eAA/BS,EAAK,KAAEC,EAAQ,MAGtBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAcC,EAAAA,EAAAA,mBAAuB,yCAAC,WAAOC,GAAI,sEACjDA,GACFhB,EAAS,YACV,2CACF,mDAJ0C,IAK3C,OAAO,kBAAMc,GAAc,CAC7B,GAAG,CAACd,IAEJ,IAAMiB,EAAkB,yCAAG,WAAOC,GAAC,sEAGG,GAFpCA,EAAEC,iBAEiB,iBACHC,KAAKjB,EAAMkB,QAAQ,CAAD,eACC,OAAjCT,EAAS,wBAAwB,0BAIwD,GAArE,qEACHQ,KAAKf,EAASgB,QAAQ,CAAD,eACmF,OAAzHT,EAAS,gHAAgH,6BAIvHP,EAASgB,SAAWd,EAAgBc,OAAM,iBACT,OAAnCT,EAAS,0BAA0B,gCAIb,KAApBH,EAASY,QAAiBZ,EAASY,OAAOC,OAAS,IAAE,iBACc,OAArEV,EAAS,4DAA4D,uDAK/DW,EAAAA,EAAAA,IAA+BR,EAAAA,EAAMZ,EAAOE,GAAU,KAAD,qBACrDmB,EAAAA,EAAAA,IAAcT,EAAAA,EAAAA,YAAkB,CAAEU,YAAahB,IAAY,KAAD,GAChEV,IACAC,EAAS,UAAU,mDAEnBY,EAAS,uBAAuB,2DAEnC,gBAjCuB,sCAmDxB,OACE,iBAAKc,UAAU,6GAA4G,WACzH,gBAAKA,UAAU,WAAU,UACvB,iBAAKA,UAAU,qBAAoB,WACjC,gBAAKA,UAAU,sDACf,eAAIA,UAAU,gEAA+D,SAAC,mBAIlF,gBAAKA,UAAU,kGAAiG,UAC9G,kBAAMC,SAAUV,EAAoBS,UAAU,uBAAsB,WAClE,4BACE,kBAAOA,UAAU,gCAA+B,SAAC,YACjD,kBACEE,KAAK,OACLC,MAAO1B,EACP2B,SAhCc,SAACZ,GACzBd,EAASc,EAAEa,OAAOF,MACpB,EA+BYH,UAAU,qDACVM,YAAY,oBAGhB,iBAAKN,UAAU,OAAM,WACnB,kBAAOA,UAAU,gCAA+B,SAAC,eACjD,kBACEE,KAAK,OACLC,MAAOpB,EACPqB,SA9BiB,SAACZ,GAC5BR,EAAYQ,EAAEa,OAAOF,MACvB,EA6BYH,UAAU,qDACVM,YAAY,uBAGhB,iBAAKN,UAAU,OAAM,WACnB,kBAAOA,UAAU,gCAA+B,SAAC,eACjD,kBACEE,KAAK,WACLC,MAAOxB,EACPyB,SAhDiB,SAACZ,GAC5BZ,EAAYY,EAAEa,OAAOF,MACvB,EA+CYH,UAAU,qDACVM,YAAY,uBAIhB,iBAAKN,UAAU,OAAM,WACnB,kBAAOA,UAAU,gCAA+B,SAAC,uBACjD,kBACEE,KAAK,WACLC,MAAOtB,EACPuB,SAvDwB,SAACZ,GACnCV,EAAmBU,EAAEa,OAAOF,MAC9B,EAsDYH,UAAU,qDACVM,YAAY,wBAIfrB,IAAS,cAAGe,UAAU,oBAAmB,SAAEf,KAE5C,gBAAKe,UAAU,6BAA4B,UACzC,mBACEE,KAAK,SACLF,UAAU,mFAAkF,SAC7F,sBAQb,C","sources":["Register.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { auth } from './firebase';\r\nimport { createUserWithEmailAndPassword, updateProfile } from 'firebase/auth';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Register = ( { triggerRerender } ) => {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        navigate('/courses');\r\n      }\r\n    });\r\n    return () => unsubscribe();\r\n  }, [navigate]);\r\n\r\n  const handleRegistration = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const emailRegex = /^\\S+@\\S+\\.\\S+$/;\r\n    if (!emailRegex.test(email.trim())) {\r\n      setError('Invalid email format');\r\n      return;\r\n    }\r\n\r\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[!@#$%^&*()])[A-Za-z\\d!@#$%^&*()]{8,}$/;\r\n    if (!passwordRegex.test(password.trim())) {\r\n      setError('Password must be at least 8 characters and contain at least one letter, one number, and one symbol: !@#$%^&*');\r\n      return;\r\n    }\r\n\r\n    if (password.trim() !== confirmPassword.trim()) {\r\n      setError('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    if (username.trim() === '' || username.trim().length > 30) {\r\n      setError('Username is required and must be less than 30 characters');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await createUserWithEmailAndPassword(auth, email, password);\r\n      await updateProfile(auth.currentUser, { displayName: username });\r\n      triggerRerender();\r\n      navigate('/login');\r\n    } catch (error) {\r\n      setError('Registration failed');\r\n    }\r\n  };\r\n\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleConfirmPasswordChange = (e) => {\r\n    setConfirmPassword(e.target.value);\r\n  };\r\n\r\n  const handleUsernameChange = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='w-full min-h-[calc(100vh-65px)] max-h-fit bg-gray-100 text-white flex flex-col items-center justify-center'>\r\n      <div className='py-[6vh]'>\r\n        <div className='relative py-2 px-6'>\r\n          <div className=\"absolute inset-0 bg-blue-400 skew-x-12 -skew-y-3\" />\r\n          <h1 className='text-6xl font-bold text-white p-3 relative z-10 tracking-wide'>Register</h1>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='flex flex-col items-center justify-center rounded-md shadow-2xl shadow-gray-500 w-full max-w-xl'>\r\n        <form onSubmit={handleRegistration} className='my-4 w-full max-w-sm'>\r\n          <div>\r\n            <label className='block text-black text-lg mb-2'>Email:</label>\r\n            <input\r\n              type='text'\r\n              value={email}\r\n              onChange={handleEmailChange}\r\n              className='bg-gray-200 text-black w-full px-4 py-2 rounded-md'\r\n              placeholder='Enter email'\r\n            />\r\n          </div>\r\n          <div className='mt-4'>\r\n            <label className='block text-black text-lg mb-2'>Username:</label>\r\n            <input\r\n              type='text'\r\n              value={username}\r\n              onChange={handleUsernameChange}\r\n              className='bg-gray-200 text-black w-full px-4 py-2 rounded-md'\r\n              placeholder='Enter username'\r\n            />\r\n          </div>\r\n          <div className='mt-4'>\r\n            <label className='block text-black text-lg mb-2'>Password:</label>\r\n            <input\r\n              type='password'\r\n              value={password}\r\n              onChange={handlePasswordChange}\r\n              className='bg-gray-200 text-black w-full px-4 py-2 rounded-md'\r\n              placeholder='Enter password'\r\n            />\r\n          </div>\r\n\r\n          <div className='mt-4'>\r\n            <label className='block text-black text-lg mb-2'>Confirm Password:</label>\r\n            <input\r\n              type='password'\r\n              value={confirmPassword}\r\n              onChange={handleConfirmPasswordChange}\r\n              className='bg-gray-200 text-black w-full px-4 py-2 rounded-md'\r\n              placeholder='Confirm password'\r\n            />\r\n          </div>\r\n\r\n          {error && <p className='text-red-500 mt-2'>{error}</p>}\r\n\r\n          <div className='w-full flex justify-center'>\r\n            <button\r\n              type='submit'\r\n              className='bg-blue-400 text-white px-4 py-2 mt-4 rounded-3xl duration-200 hover:bg-blue-500'\r\n            >\r\n              Register\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport { Register as default}"],"names":["Register","triggerRerender","navigate","useNavigate","useState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","username","setUsername","error","setError","useEffect","unsubscribe","auth","user","handleRegistration","e","preventDefault","test","trim","length","createUserWithEmailAndPassword","updateProfile","displayName","className","onSubmit","type","value","onChange","target","placeholder"],"sourceRoot":""}