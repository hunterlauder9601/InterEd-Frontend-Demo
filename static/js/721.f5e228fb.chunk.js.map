{"version":3,"file":"static/js/721.f5e228fb.chunk.js","mappings":"wPAMMA,EAAU,SAAH,GAA+B,IAAxBC,EAAe,EAAfA,gBACZC,GAAWC,EAAAA,EAAAA,MAEjB,GAAsCC,EAAAA,EAAAA,UAAS,IAAG,eAA3CC,EAAW,KAAEC,EAAc,KAClC,GAAsCF,EAAAA,EAAAA,UAAS,IAAG,eAA3CG,EAAW,KAAEC,EAAc,KAClC,GAA8CJ,EAAAA,EAAAA,UAAS,IAAG,eAAnDK,EAAe,KAAEC,EAAkB,KAC1C,GAAwBN,EAAAA,EAAAA,UAAS,YAAW,eAArCO,EAAI,KAAEC,EAAO,MAEpBC,EAAAA,EAAAA,YAAU,WACR,IAAIC,EAEEC,EAAS,yCAAG,WAAOC,GAAI,sEACtBA,GACHd,EAAS,UACV,2CACF,gBAJc,sCASf,OAHAY,EAAkBG,EAAAA,EAAAA,mBAAwBF,GAGnC,WACLD,GACF,CACF,GAAG,CAACZ,IAEJ,IAAMgB,EAAoB,yCAAG,yFAGI,OAHJ,SAGnBF,EAAOC,EAAAA,EAAAA,YAAiB,EAAD,QACvBE,EAAAA,EAAAA,IAAcH,EAAM,CAAEI,YAAaf,IAAe,KAAD,EACvDJ,IACAK,EAAe,IACfe,MAAM,kCAAkC,gDAExCC,QAAQC,MAAM,2BAA4B,KAAMC,SAChDH,MAAM,8CAA8C,yDAEvD,kBAZyB,mCAcpBI,EAAoB,yCAAG,qGAErBlB,IAAgBE,EAAe,iBAEJ,OAAvBO,EAAOC,EAAAA,EAAAA,YAAiB,EAAD,QACvBS,EAAAA,EAAAA,IAAeV,EAAMT,GAAa,KAAD,EACvCC,EAAe,IACfE,EAAmB,IACnBW,MAAM,kCAAkC,wBAGxCA,MAAM,0EAA0E,0DAGlFC,QAAQC,MAAM,2BAA4B,KAAMC,SAChDH,MAAM,8CAA8C,0DAEvD,kBAjByB,mCAoB1B,OACE,gBAAKM,UAAU,qGAAoG,UACjH,iBAAKA,UAAU,4CAA2C,WACxD,gBAAKA,UAAU,kCAAiC,UAC9C,iBAAKA,UAAU,oCAAmC,WAChD,gBACEC,QAAS,kBAAMhB,EAAQ,WAAW,EAClCe,UAAS,UACE,aAAThB,EACI,iCACA,6BAA4B,wGACqE,SACxG,aAGD,gBACEiB,QAAS,kBAAMhB,EAAQ,eAAe,EACtCe,UAAS,UACE,iBAAThB,EACI,iCACA,6BAA4B,wGACqE,SACxG,uBAOL,iBAAKgB,UAAU,8EAA6E,UAEhF,aAAThB,IACC,iBAAKgB,UAAU,iGAAgG,WAC7G,gBAAKA,UAAU,OAAM,UACnB,eAAIA,UAAU,6EAA4E,SAAC,wBAE3F,kBAAOA,UAAU,2CAA0C,SAAC,mBAC5D,kBACEE,KAAK,OACLF,UAAU,+BACVG,YAAY,WACZC,MAAO1B,EACP2B,SAAU,SAACC,GAAC,OAAK3B,EAAe2B,EAAEC,OAAOH,MAAM,KAEjD,mBACEH,QAASV,EACTS,UAAU,qFAAoF,SAC/F,qBAID,eAAIA,UAAU,wCAEd,kBAAOA,UAAU,2CAA0C,SAAC,mBAG5D,kBACEE,KAAK,WACLC,YAAY,WACZH,UAAU,oCACVI,MAAOxB,EACPyB,SAAU,SAACC,GAAC,OAAKzB,EAAeyB,EAAEC,OAAOH,MAAM,KAGjD,kBAAOJ,UAAU,2CAA0C,SAAC,2BAG5D,kBACEE,KAAK,WACLF,UAAU,+BACVG,YAAY,gBACZC,MAAOtB,EACPuB,SAAU,SAACC,GAAC,OAAKvB,EAAmBuB,EAAEC,OAAOH,MAAM,KAErD,mBACEH,QAASH,EACTE,UAAU,qFAAoF,SAC/F,qBAID,0BACE,iBAAMA,UAAU,YAAW,SAAC,WAAa,iJAOvC,iBAAThB,IACC,gBAAKgB,UAAU,OAAM,UACnB,eAAIA,UAAU,6EAA4E,SAAC,mCASzG,C","sources":["Account.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { auth } from './firebase';\r\nimport { updateProfile, updatePassword } from \"firebase/auth\";\r\n\r\n\r\nconst Account = ( { triggerRerender } ) => {\r\n  const navigate = useNavigate();\r\n\r\n  const [newUsername, setNewUsername] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [mode, setMode] = useState('settings');\r\n\r\n  useEffect(() => {\r\n    let unsubscribeAuth;\r\n\r\n    const checkUser = async (user) => {\r\n      if (!user) {\r\n        navigate('/login');\r\n      }\r\n    };\r\n\r\n    unsubscribeAuth = auth.onAuthStateChanged(checkUser);\r\n\r\n    // Clean up the observers when the component unmounts\r\n    return () => {\r\n      unsubscribeAuth();\r\n    };\r\n  }, [navigate]);\r\n\r\n  const handleChangeUsername = async () => {\r\n    try {\r\n      // Use Firebase Authentication to update the username\r\n      const user = auth.currentUser;\r\n      await updateProfile(user, { displayName: newUsername });\r\n      triggerRerender();\r\n      setNewUsername(''); // Clear the input field\r\n      alert('Username updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating username:', error.message);\r\n      alert('Error updating username. Please try again.');\r\n    }\r\n  };\r\n  \r\n  const handleChangePassword = async () => {\r\n    try {\r\n      if (newPassword === confirmPassword) {\r\n        // Passwords match, proceed with the change\r\n        const user = auth.currentUser;\r\n        await updatePassword(user, newPassword);\r\n        setNewPassword(''); // Clear the input fields\r\n        setConfirmPassword('');\r\n        alert('Password updated successfully!');\r\n      } else {\r\n        // Passwords do not match\r\n        alert('Passwords do not match. Please make sure they match before proceeding.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating password:', error.message);\r\n      alert('Error updating password. Please try again.');\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className='w-full min-h-[calc(100vh-65px)] max-h-fit bg-gray-100 text-black flex items-center overflow-hidden'>\r\n      <div className='min-h-[calc(100vh-65px)] max-h-fit w-full'>\r\n        <div className='bg-gray-200 flex justify-center'>\r\n          <div className=\"flex bg-gray-200 w-full max-w-3xl\">\r\n            <div\r\n              onClick={() => setMode('settings')}\r\n              className={`${\r\n                mode === 'settings'\r\n                  ? ' border-blue-500 text-blue-500'\r\n                  : 'text-black border-gray-500'\r\n              } hover:bg-gray-300 border-b-2 w-1/2 py-2 text-xl font-bold tracking-wider cursor-pointer text-center`}\r\n            >\r\n              Account\r\n            </div>\r\n            <div\r\n              onClick={() => setMode('subscription')}\r\n              className={`${\r\n                mode === 'subscription'\r\n                  ? ' border-blue-500 text-blue-500'\r\n                  : 'text-black border-gray-500'\r\n              } hover:bg-gray-300 border-b-2 w-1/2 py-2 text-xl font-bold tracking-wider cursor-pointer text-center`}\r\n            >\r\n              Subscription\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className='min-h-[calc(100vh-111px)] max-h-fit w-full flex items-center justify-center'>\r\n\r\n          {mode === 'settings' && (\r\n            <div className='flex flex-col w-full max-w-3xl py-8 px-4 h-full items-center justify-center text-lg text-black'>\r\n              <div className='mb-8'>\r\n                <h1 className='text-4xl font-bold border-b-4 border-purple-400 tracking-wider inline py-1'>Account Settings</h1>\r\n              </div>\r\n                <label className=\"block font-semibold text-gray-600 w-full\">New Username:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"border rounded-md p-2 w-full\"\r\n                  placeholder='username'\r\n                  value={newUsername}\r\n                  onChange={(e) => setNewUsername(e.target.value)}\r\n                />\r\n                <button\r\n                  onClick={handleChangeUsername}\r\n                  className=\"bg-blue-400 hover:bg-blue-500 text-white px-4 py-2 rounded-3xl tracking-wider mt-4\"\r\n                >\r\n                  Change Username\r\n                </button>\r\n\r\n                <hr className='w-full border my-8 border-gray-300'/>\r\n\r\n                <label className=\"block font-semibold text-gray-600 w-full\">\r\n                  New Password:\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder='password'\r\n                  className=\"border rounded-md p-2 w-full mb-4\"\r\n                  value={newPassword}\r\n                  onChange={(e) => setNewPassword(e.target.value)}\r\n                />\r\n\r\n                <label className=\"block font-semibold text-gray-600 w-full\">\r\n                  Confirm New Password:\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"border rounded-md p-2 w-full\"\r\n                  placeholder='same password'\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                />\r\n                <button\r\n                  onClick={handleChangePassword}\r\n                  className=\"bg-blue-400 hover:bg-blue-500 text-white px-4 py-2 rounded-3xl tracking-wider my-4\"\r\n                >\r\n                  Change Password\r\n                </button>\r\n\r\n                <p>\r\n                  <span className='font-bold'>Note: </span>\r\n                  If you're logged in via Google, changing your password will simply add/edit the standard login method using your email and new password.\r\n                </p>\r\n\r\n              </div>\r\n          )}\r\n\r\n          {mode === 'subscription' && (\r\n            <div className='mb-8'>\r\n              <h1 className='text-4xl font-bold border-b-4 border-purple-400 tracking-wider inline py-1'>Subscription Settings</h1>\r\n            </div>\r\n          )}\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport { Account as default}"],"names":["Account","triggerRerender","navigate","useNavigate","useState","newUsername","setNewUsername","newPassword","setNewPassword","confirmPassword","setConfirmPassword","mode","setMode","useEffect","unsubscribeAuth","checkUser","user","auth","handleChangeUsername","updateProfile","displayName","alert","console","error","message","handleChangePassword","updatePassword","className","onClick","type","placeholder","value","onChange","e","target"],"sourceRoot":""}